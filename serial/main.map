Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
                              main.o (__umulhisi3)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x150
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000048        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x000000000000004c        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x000000000000004c                __vector_1
                0x000000000000004c                __vector_12
                0x000000000000004c                __bad_interrupt
                0x000000000000004c                __vector_6
                0x000000000000004c                __vector_3
                0x000000000000004c                __vector_11
                0x000000000000004c                __vector_13
                0x000000000000004c                __vector_17
                0x000000000000004c                __vector_7
                0x000000000000004c                __vector_5
                0x000000000000004c                __vector_4
                0x000000000000004c                __vector_9
                0x000000000000004c                __vector_2
                0x000000000000004c                __vector_15
                0x000000000000004c                __vector_8
                0x000000000000004c                __vector_14
                0x000000000000004c                __vector_10
                0x000000000000004c                __vector_16
                0x000000000000004c                __vector_18
 .text          0x000000000000004e       0x70 main.o
                0x000000000000004e                delay_ms
                0x0000000000000078                USART_Init
                0x000000000000009e                USART_Transmit
                0x00000000000000a6                uputs
 .text          0x00000000000000be        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x00000000000000be        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text          0x00000000000000be        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
                0x00000000000000be                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000000be       0x76 main.o
                0x00000000000000be                main
 .text.libgcc.mul
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000134        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000134       0x18 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
                0x0000000000000134                __umulhisi3
 .text.libgcc.div
                0x000000000000014c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x000000000000014c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x000000000000014c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x000000000000014c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x000000000000014c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x000000000000014c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
                0x000000000000014c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000014c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x000000000000014c                exit
                0x000000000000014c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000014c        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000150                _etext = .

.data           0x0000000000800060        0x8 load address 0x0000000000000150
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800060        0x7 main.o
 *(.gnu.linkonce.d*)
                0x0000000000800068                . = ALIGN (0x2)
 *fill*         0x0000000000800067        0x1 
                0x0000000000800068                _edata = .
                0x0000000000800068                PROVIDE (__data_end, .)

.bss            0x0000000000800068        0x0
                0x0000000000800068                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000800068        0x0 main.o
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800068                PROVIDE (__bss_end, .)
                0x0000000000000150                __data_load_start = LOADADDR (.data)
                0x0000000000000158                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800068        0x0
                0x0000000000800068                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800068                PROVIDE (__noinit_end, .)
                0x0000000000800068                _end = .
                0x0000000000800068                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x8c4
 *(.stab)
 .stab          0x0000000000000000      0x8c4 main.o

.stabstr        0x0000000000000000      0xcb4
 *(.stabstr)
 .stabstr       0x0000000000000000      0xcb4 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
