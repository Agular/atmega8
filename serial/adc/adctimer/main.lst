
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001292  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00001292  00001326  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000082  00800080  00800080  00001346  2**0
                  ALLOC
  3 .stab         0000168c  00000000  00000000  00001348  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ff9  00000000  00000000  000029d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000039cd  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000039e0  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	93 c0       	rjmp	.+294    	; 0x128 <__ctors_end>
       2:	ad c0       	rjmp	.+346    	; 0x15e <__bad_interrupt>
       4:	ac c0       	rjmp	.+344    	; 0x15e <__bad_interrupt>
       6:	ab c0       	rjmp	.+342    	; 0x15e <__bad_interrupt>
       8:	aa c0       	rjmp	.+340    	; 0x15e <__bad_interrupt>
       a:	a9 c0       	rjmp	.+338    	; 0x15e <__bad_interrupt>
       c:	a8 c0       	rjmp	.+336    	; 0x15e <__bad_interrupt>
       e:	a7 c0       	rjmp	.+334    	; 0x15e <__bad_interrupt>
      10:	14 c1       	rjmp	.+552    	; 0x23a <__vector_8>
      12:	a5 c0       	rjmp	.+330    	; 0x15e <__bad_interrupt>
      14:	a4 c0       	rjmp	.+328    	; 0x15e <__bad_interrupt>
      16:	a3 c0       	rjmp	.+326    	; 0x15e <__bad_interrupt>
      18:	a2 c0       	rjmp	.+324    	; 0x15e <__bad_interrupt>
      1a:	a1 c0       	rjmp	.+322    	; 0x15e <__bad_interrupt>
      1c:	a0 c0       	rjmp	.+320    	; 0x15e <__bad_interrupt>
      1e:	9f c0       	rjmp	.+318    	; 0x15e <__bad_interrupt>
      20:	9e c0       	rjmp	.+316    	; 0x15e <__bad_interrupt>
      22:	9d c0       	rjmp	.+314    	; 0x15e <__bad_interrupt>
      24:	9c c0       	rjmp	.+312    	; 0x15e <__bad_interrupt>

00000026 <__trampolines_end>:
      26:	6e 61       	ori	r22, 0x1E	; 30
      28:	6e 00       	.word	0x006e	; ????

0000002a <__c.2177>:
      2a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      3a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      4a:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      5a:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      6a:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      7a:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      8a:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      9a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      aa:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      ba:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      ca:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
      da:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
      ea:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
      fa:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     10a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     11a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000128 <__ctors_end>:
     128:	11 24       	eor	r1, r1
     12a:	1f be       	out	0x3f, r1	; 63
     12c:	cf e5       	ldi	r28, 0x5F	; 95
     12e:	d4 e0       	ldi	r29, 0x04	; 4
     130:	de bf       	out	0x3e, r29	; 62
     132:	cd bf       	out	0x3d, r28	; 61

00000134 <__do_copy_data>:
     134:	10 e0       	ldi	r17, 0x00	; 0
     136:	a0 e6       	ldi	r26, 0x60	; 96
     138:	b0 e0       	ldi	r27, 0x00	; 0
     13a:	e2 e9       	ldi	r30, 0x92	; 146
     13c:	f2 e1       	ldi	r31, 0x12	; 18
     13e:	02 c0       	rjmp	.+4      	; 0x144 <__do_copy_data+0x10>
     140:	05 90       	lpm	r0, Z+
     142:	0d 92       	st	X+, r0
     144:	a0 38       	cpi	r26, 0x80	; 128
     146:	b1 07       	cpc	r27, r17
     148:	d9 f7       	brne	.-10     	; 0x140 <__do_copy_data+0xc>

0000014a <__do_clear_bss>:
     14a:	21 e0       	ldi	r18, 0x01	; 1
     14c:	a0 e8       	ldi	r26, 0x80	; 128
     14e:	b0 e0       	ldi	r27, 0x00	; 0
     150:	01 c0       	rjmp	.+2      	; 0x154 <.do_clear_bss_start>

00000152 <.do_clear_bss_loop>:
     152:	1d 92       	st	X+, r1

00000154 <.do_clear_bss_start>:
     154:	a2 30       	cpi	r26, 0x02	; 2
     156:	b2 07       	cpc	r27, r18
     158:	e1 f7       	brne	.-8      	; 0x152 <.do_clear_bss_loop>
     15a:	ca d4       	rcall	.+2452   	; 0xaf0 <main>
     15c:	98 c8       	rjmp	.-3792   	; 0xfffff28e <__eeprom_end+0xff7ef28e>

0000015e <__bad_interrupt>:
     15e:	50 cf       	rjmp	.-352    	; 0x0 <__vectors>

00000160 <delay_ms>:
char buffer[128];
/*
 * Delay in ms
 */
void delay_ms(unsigned short ms){
    for(ms /= 10; ms > 0; ms--)
     160:	9c 01       	movw	r18, r24
     162:	ad ec       	ldi	r26, 0xCD	; 205
     164:	bc ec       	ldi	r27, 0xCC	; 204
     166:	22 d5       	rcall	.+2628   	; 0xbac <__umulhisi3>
     168:	96 95       	lsr	r25
     16a:	87 95       	ror	r24
     16c:	96 95       	lsr	r25
     16e:	87 95       	ror	r24
     170:	96 95       	lsr	r25
     172:	87 95       	ror	r24
     174:	00 97       	sbiw	r24, 0x00	; 0
     176:	41 f0       	breq	.+16     	; 0x188 <delay_ms+0x28>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     178:	ef ef       	ldi	r30, 0xFF	; 255
     17a:	fb e6       	ldi	r31, 0x6B	; 107
     17c:	31 97       	sbiw	r30, 0x01	; 1
     17e:	f1 f7       	brne	.-4      	; 0x17c <delay_ms+0x1c>
     180:	00 c0       	rjmp	.+0      	; 0x182 <delay_ms+0x22>
     182:	00 00       	nop
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	c1 f7       	brne	.-16     	; 0x178 <delay_ms+0x18>
     188:	08 95       	ret

0000018a <USART_Transmit>:
        _delay_ms(10);
}

void USART_Transmit(unsigned char data){
    
    while(! (UCSRA & (1<<UDRE)));
     18a:	5d 9b       	sbis	0x0b, 5	; 11
     18c:	fe cf       	rjmp	.-4      	; 0x18a <USART_Transmit>
    UDR = data;
     18e:	8c b9       	out	0x0c, r24	; 12
     190:	08 95       	ret

00000192 <uputs>:
}

void uputs(char *s){
     192:	fc 01       	movw	r30, r24
    while(*s){
     194:	90 81       	ld	r25, Z
     196:	99 23       	and	r25, r25
     198:	39 f0       	breq	.+14     	; 0x1a8 <uputs+0x16>
     19a:	31 96       	adiw	r30, 0x01	; 1
        _delay_ms(10);
}

void USART_Transmit(unsigned char data){
    
    while(! (UCSRA & (1<<UDRE)));
     19c:	5d 9b       	sbis	0x0b, 5	; 11
     19e:	fe cf       	rjmp	.-4      	; 0x19c <uputs+0xa>
    UDR = data;
     1a0:	9c b9       	out	0x0c, r25	; 12
}

void uputs(char *s){
    while(*s){
     1a2:	91 91       	ld	r25, Z+
     1a4:	91 11       	cpse	r25, r1
     1a6:	fa cf       	rjmp	.-12     	; 0x19c <uputs+0xa>
     1a8:	08 95       	ret

000001aa <USART_Init>:
        USART_Transmit(*s++);
    }
}
void USART_Init(unsigned long ubrr){
     1aa:	0f 93       	push	r16
     1ac:	1f 93       	push	r17
    
    UBRRH = (unsigned char) (ubrr >> 8);
     1ae:	07 2f       	mov	r16, r23
     1b0:	18 2f       	mov	r17, r24
     1b2:	29 2f       	mov	r18, r25
     1b4:	33 27       	eor	r19, r19
     1b6:	00 bd       	out	0x20, r16	; 32
    UBRRL = (unsigned char) ubrr&0xff;
     1b8:	69 b9       	out	0x09, r22	; 9
// Aktivieren von receiver und transmitter
// RXEN Receive enable
// TXEN Transmit enable
// RXCIE Receive complete Interrupt enable
    UCSRB = (1<<RXEN) |(1<<TXEN);//|(1<<RXCIE);
     1ba:	88 e1       	ldi	r24, 0x18	; 24
     1bc:	8a b9       	out	0x0a, r24	; 10

/* Einstellen des Datenformats: 8 Datenbits, 1 Stoppbit, keine Parit채tskontrolle */
    UCSRC = (1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0); // 8N1
     1be:	86 e8       	ldi	r24, 0x86	; 134
     1c0:	80 bd       	out	0x20, r24	; 32

// Flush Receive-Buffer (entfernen evtl. vorhandener ung체ltiger Werte)
    do
    {
       uint8_t dummy;
          (void) (dummy = UDR);
     1c2:	8c b1       	in	r24, 0x0c	; 12
    }
    while (UCSRA & (1 << RXC));
     1c4:	5f 99       	sbic	0x0b, 7	; 11
     1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <USART_Init+0x18>
}
     1c8:	1f 91       	pop	r17
     1ca:	0f 91       	pop	r16
     1cc:	08 95       	ret

000001ce <init>:
        USART_Transmit(*s++);
    }
}
void USART_Init(unsigned long ubrr){
    
    UBRRH = (unsigned char) (ubrr >> 8);
     1ce:	10 bc       	out	0x20, r1	; 32
    UBRRL = (unsigned char) ubrr&0xff;
     1d0:	87 e4       	ldi	r24, 0x47	; 71
     1d2:	89 b9       	out	0x09, r24	; 9
// Aktivieren von receiver und transmitter
// RXEN Receive enable
// TXEN Transmit enable
// RXCIE Receive complete Interrupt enable
    UCSRB = (1<<RXEN) |(1<<TXEN);//|(1<<RXCIE);
     1d4:	88 e1       	ldi	r24, 0x18	; 24
     1d6:	8a b9       	out	0x0a, r24	; 10

/* Einstellen des Datenformats: 8 Datenbits, 1 Stoppbit, keine Parit채tskontrolle */
    UCSRC = (1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0); // 8N1
     1d8:	86 e8       	ldi	r24, 0x86	; 134
     1da:	80 bd       	out	0x20, r24	; 32

// Flush Receive-Buffer (entfernen evtl. vorhandener ung체ltiger Werte)
    do
    {
       uint8_t dummy;
          (void) (dummy = UDR);
     1dc:	8c b1       	in	r24, 0x0c	; 12
    }
    while (UCSRA & (1 << RXC));
     1de:	5f 99       	sbic	0x0b, 7	; 11
     1e0:	fd cf       	rjmp	.-6      	; 0x1dc <init+0xe>
}

void init(){
    USART_Init(UBRR);
    lcd_init(LCD_DISP_ON);
     1e2:	8c e0       	ldi	r24, 0x0C	; 12
     1e4:	e9 d0       	rcall	.+466    	; 0x3b8 <lcd_init>
    /*Set output pins*/
    DDRB = 1 << PIN0 | 1 << PIN1 | 1 << PIN2 | 1 << PIN3;   // 1:out 0:in
     1e6:	8f e0       	ldi	r24, 0x0F	; 15
     1e8:	87 bb       	out	0x17, r24	; 23
    //Set the counter value
    TCNT1 = counter;
     1ea:	80 ed       	ldi	r24, 0xD0	; 208
     1ec:	95 ed       	ldi	r25, 0xD5	; 213
     1ee:	9d bd       	out	0x2d, r25	; 45
     1f0:	8c bd       	out	0x2c, r24	; 44
    //Set the register, B is responsible for activating the counter.
    TCCR1A = 0;
     1f2:	1f bc       	out	0x2f, r1	; 47
    TCCR1B = (1<<CS12);
     1f4:	84 e0       	ldi	r24, 0x04	; 4
     1f6:	8e bd       	out	0x2e, r24	; 46
    //Enable timer interrupts on Timer1 overflow.
    TIMSK = (1 << TOIE1);
     1f8:	89 bf       	out	0x39, r24	; 57

    /*
     * Allow Global Interrupts
     */
    sei();
     1fa:	78 94       	sei
    set_sleep_mode(SLEEP_MODE_IDLE);
     1fc:	85 b7       	in	r24, 0x35	; 53
     1fe:	8f 78       	andi	r24, 0x8F	; 143
     200:	85 bf       	out	0x35, r24	; 53
    cli();
     202:	f8 94       	cli
     204:	08 95       	ret

00000206 <readADC>:
uint16_t readADC() {
	uint8_t i;
	uint16_t result = 0;
	
	// Activate ADC and set the factor to 64 (100);
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) ;
     206:	86 e8       	ldi	r24, 0x86	; 134
     208:	86 b9       	out	0x06, r24	; 6

	// Select channel 5 and internal reference
	ADMUX = (1<<MUX2) | (1<<MUX0) |(1<<REFS0);
     20a:	85 e4       	ldi	r24, 0x45	; 69
     20c:	87 b9       	out	0x07, r24	; 7
	
	// Initialize ADC and make a dummy readout.
	ADCSRA |= (1<<ADSC);
     20e:	36 9a       	sbi	0x06, 6	; 6
	while(ADCSRA & (1<<ADSC));
     210:	36 99       	sbic	0x06, 6	; 6
     212:	fe cf       	rjmp	.-4      	; 0x210 <readADC+0xa>
     214:	83 e0       	ldi	r24, 0x03	; 3
     216:	20 e0       	ldi	r18, 0x00	; 0
     218:	30 e0       	ldi	r19, 0x00	; 0
            
	// Read 3 times and calculate the average.
	for(i=0; i<3; i++) {
		// Eine Wandlung
		ADCSRA |= (1<<ADSC);
     21a:	36 9a       	sbi	0x06, 6	; 6
		// Auf Ergebnis warten...
		while(ADCSRA & (1<<ADSC));
     21c:	36 99       	sbic	0x06, 6	; 6
     21e:	fe cf       	rjmp	.-4      	; 0x21c <readADC+0x16>
		
		result += ADCW;
     220:	44 b1       	in	r20, 0x04	; 4
     222:	55 b1       	in	r21, 0x05	; 5
     224:	24 0f       	add	r18, r20
     226:	35 1f       	adc	r19, r21
     228:	81 50       	subi	r24, 0x01	; 1
	// Initialize ADC and make a dummy readout.
	ADCSRA |= (1<<ADSC);
	while(ADCSRA & (1<<ADSC));
            
	// Read 3 times and calculate the average.
	for(i=0; i<3; i++) {
     22a:	b9 f7       	brne	.-18     	; 0x21a <readADC+0x14>
		
		result += ADCW;
	}
	
	// Deactivate ADC.
	ADCSRA &= ~(1<<ADEN);
     22c:	37 98       	cbi	0x06, 7	; 6
	
	result /= 3;
     22e:	ab ea       	ldi	r26, 0xAB	; 171
     230:	ba ea       	ldi	r27, 0xAA	; 170
     232:	bc d4       	rcall	.+2424   	; 0xbac <__umulhisi3>
	
	return result;
}
     234:	96 95       	lsr	r25
     236:	87 95       	ror	r24
     238:	08 95       	ret

0000023a <__vector_8>:

ISR(TIMER1_OVF_vect){
     23a:	1f 92       	push	r1
     23c:	0f 92       	push	r0
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	0f 92       	push	r0
     242:	11 24       	eor	r1, r1
     244:	2f 93       	push	r18
     246:	3f 93       	push	r19
     248:	4f 93       	push	r20
     24a:	5f 93       	push	r21
     24c:	6f 93       	push	r22
     24e:	7f 93       	push	r23
     250:	8f 93       	push	r24
     252:	9f 93       	push	r25
     254:	af 93       	push	r26
     256:	bf 93       	push	r27
     258:	ef 93       	push	r30
     25a:	ff 93       	push	r31
    TCNT1 = counter;
     25c:	80 ed       	ldi	r24, 0xD0	; 208
     25e:	95 ed       	ldi	r25, 0xD5	; 213
     260:	9d bd       	out	0x2d, r25	; 45
     262:	8c bd       	out	0x2c, r24	; 44
    adc = readADC();
     264:	d0 df       	rcall	.-96     	; 0x206 <readADC>
     266:	90 93 01 01 	sts	0x0101, r25
     26a:	80 93 00 01 	sts	0x0100, r24
}
     26e:	ff 91       	pop	r31
     270:	ef 91       	pop	r30
     272:	bf 91       	pop	r27
     274:	af 91       	pop	r26
     276:	9f 91       	pop	r25
     278:	8f 91       	pop	r24
     27a:	7f 91       	pop	r23
     27c:	6f 91       	pop	r22
     27e:	5f 91       	pop	r21
     280:	4f 91       	pop	r20
     282:	3f 91       	pop	r19
     284:	2f 91       	pop	r18
     286:	0f 90       	pop	r0
     288:	0f be       	out	0x3f, r0	; 63
     28a:	0f 90       	pop	r0
     28c:	1f 90       	pop	r1
     28e:	18 95       	reti

00000290 <lcd_write>:
static void lcd_write(uint8_t data,uint8_t rs) 
{
    unsigned char dataBits ;


    if (rs) {   /* write data        (RS=1, RW=0) */
     290:	61 11       	cpse	r22, r1
     292:	18 c0       	rjmp	.+48     	; 0x2c4 <lcd_write+0x34>
       lcd_rs_high();
    } else {    /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
     294:	95 98       	cbi	0x12, 5	; 18
    }
    lcd_rw_low();
     296:	96 98       	cbi	0x12, 6	; 18

    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && (LCD_DATA0_PIN == 0) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= 0x0F;
     298:	94 b3       	in	r25, 0x14	; 20
     29a:	9f 60       	ori	r25, 0x0F	; 15
     29c:	94 bb       	out	0x14, r25	; 20

        /* output high nibble first */
        dataBits = LCD_DATA0_PORT & 0xF0;
     29e:	95 b3       	in	r25, 0x15	; 21
     2a0:	90 7f       	andi	r25, 0xF0	; 240
        LCD_DATA0_PORT = dataBits |((data>>4)&0x0F);
     2a2:	28 2f       	mov	r18, r24
     2a4:	22 95       	swap	r18
     2a6:	2f 70       	andi	r18, 0x0F	; 15
     2a8:	29 2b       	or	r18, r25
     2aa:	25 bb       	out	0x15, r18	; 21

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     2ac:	97 9a       	sbi	0x12, 7	; 18
    lcd_e_delay();
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <lcd_write+0x20>
    lcd_e_low();
     2b0:	97 98       	cbi	0x12, 7	; 18
        dataBits = LCD_DATA0_PORT & 0xF0;
        LCD_DATA0_PORT = dataBits |((data>>4)&0x0F);
        lcd_e_toggle();

        /* output low nibble */
        LCD_DATA0_PORT = dataBits | (data&0x0F);
     2b2:	8f 70       	andi	r24, 0x0F	; 15
     2b4:	89 2b       	or	r24, r25
     2b6:	85 bb       	out	0x15, r24	; 21

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     2b8:	97 9a       	sbi	0x12, 7	; 18
    lcd_e_delay();
     2ba:	00 c0       	rjmp	.+0      	; 0x2bc <lcd_write+0x2c>
    lcd_e_low();
     2bc:	97 98       	cbi	0x12, 7	; 18
        /* output low nibble */
        LCD_DATA0_PORT = dataBits | (data&0x0F);
        lcd_e_toggle();

        /* all data pins high (inactive) */
        LCD_DATA0_PORT = dataBits | 0x0F;
     2be:	9f 60       	ori	r25, 0x0F	; 15
     2c0:	95 bb       	out	0x15, r25	; 21
     2c2:	08 95       	ret
{
    unsigned char dataBits ;


    if (rs) {   /* write data        (RS=1, RW=0) */
       lcd_rs_high();
     2c4:	95 9a       	sbi	0x12, 5	; 18
     2c6:	e7 cf       	rjmp	.-50     	; 0x296 <lcd_write+0x6>

000002c8 <lcd_read.constprop.0>:
    
    
    if (rs)
        lcd_rs_high();                       /* RS=1: read data      */
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
     2c8:	95 98       	cbi	0x12, 5	; 18
    lcd_rw_high();                           /* RW=1  read mode      */
     2ca:	96 9a       	sbi	0x12, 6	; 18
    
    if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
      && ( LCD_DATA0_PIN == 0 )&& (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        DDR(LCD_DATA0_PORT) &= 0xF0;         /* configure data pins as input */
     2cc:	84 b3       	in	r24, 0x14	; 20
     2ce:	80 7f       	andi	r24, 0xF0	; 240
     2d0:	84 bb       	out	0x14, r24	; 20
        
        lcd_e_high();
     2d2:	97 9a       	sbi	0x12, 7	; 18
        lcd_e_delay();        
     2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <lcd_read.constprop.0+0xe>
        data = PIN(LCD_DATA0_PORT) << 4;     /* read high nibble first */
     2d6:	23 b3       	in	r18, 0x13	; 19
        lcd_e_low();
     2d8:	97 98       	cbi	0x12, 7	; 18
        
        lcd_e_delay();                       /* Enable 500ns low       */
     2da:	00 c0       	rjmp	.+0      	; 0x2dc <lcd_read.constprop.0+0x14>
        
        lcd_e_high();
     2dc:	97 9a       	sbi	0x12, 7	; 18
        lcd_e_delay();
     2de:	00 c0       	rjmp	.+0      	; 0x2e0 <lcd_read.constprop.0+0x18>
        data |= PIN(LCD_DATA0_PORT)&0x0F;    /* read low nibble        */
     2e0:	93 b3       	in	r25, 0x13	; 19
    {
        DDR(LCD_DATA0_PORT) &= 0xF0;         /* configure data pins as input */
        
        lcd_e_high();
        lcd_e_delay();        
        data = PIN(LCD_DATA0_PORT) << 4;     /* read high nibble first */
     2e2:	22 95       	swap	r18
     2e4:	20 7f       	andi	r18, 0xF0	; 240
        
        lcd_e_delay();                       /* Enable 500ns low       */
        
        lcd_e_high();
        lcd_e_delay();
        data |= PIN(LCD_DATA0_PORT)&0x0F;    /* read low nibble        */
     2e6:	89 2f       	mov	r24, r25
     2e8:	8f 70       	andi	r24, 0x0F	; 15
        lcd_e_low();
     2ea:	97 98       	cbi	0x12, 7	; 18
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
        lcd_e_low();
    }
    return data;
}
     2ec:	82 2b       	or	r24, r18
     2ee:	08 95       	ret

000002f0 <lcd_waitbusy>:

{
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
     2f0:	eb df       	rcall	.-42     	; 0x2c8 <lcd_read.constprop.0>
     2f2:	87 fd       	sbrc	r24, 7
     2f4:	fd cf       	rjmp	.-6      	; 0x2f0 <lcd_waitbusy>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     2f6:	85 e0       	ldi	r24, 0x05	; 5
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	01 97       	sbiw	r24, 0x01	; 1
     2fc:	f1 f7       	brne	.-4      	; 0x2fa <lcd_waitbusy+0xa>
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(2);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
     2fe:	e4 cf       	rjmp	.-56     	; 0x2c8 <lcd_read.constprop.0>

00000300 <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
     300:	cf 93       	push	r28
     302:	c8 2f       	mov	r28, r24
    lcd_waitbusy();
     304:	f5 df       	rcall	.-22     	; 0x2f0 <lcd_waitbusy>
    lcd_write(cmd,0);
     306:	60 e0       	ldi	r22, 0x00	; 0
     308:	8c 2f       	mov	r24, r28
}
     30a:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
    lcd_write(cmd,0);
     30c:	c1 cf       	rjmp	.-126    	; 0x290 <lcd_write>

0000030e <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
     30e:	cf 93       	push	r28
     310:	c8 2f       	mov	r28, r24
    lcd_waitbusy();
     312:	ee df       	rcall	.-36     	; 0x2f0 <lcd_waitbusy>
    lcd_write(data,1);
     314:	61 e0       	ldi	r22, 0x01	; 1
     316:	8c 2f       	mov	r24, r28
}
     318:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
    lcd_waitbusy();
    lcd_write(data,1);
     31a:	ba cf       	rjmp	.-140    	; 0x290 <lcd_write>

0000031c <lcd_gotoxy>:
Input:    x  horizontal position  (0: left most position)
          y  vertical position    (0: first line)
Returns:  none
*************************************************************************/
void lcd_gotoxy(uint8_t x, uint8_t y)
{
     31c:	cf 93       	push	r28
     31e:	c8 2f       	mov	r28, r24
#if LCD_LINES==1
    lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#endif
#if LCD_LINES==2
    if ( y==0 ) 
     320:	66 23       	and	r22, r22
     322:	31 f0       	breq	.+12     	; 0x330 <lcd_gotoxy+0x14>
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
     324:	e5 df       	rcall	.-54     	; 0x2f0 <lcd_waitbusy>
    lcd_write(cmd,0);
     326:	60 e0       	ldi	r22, 0x00	; 0
     328:	80 ec       	ldi	r24, 0xC0	; 192
     32a:	8c 0f       	add	r24, r28
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE3+x);
    else /* y==3 */
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE4+x);
#endif

}/* lcd_gotoxy */
     32c:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
    lcd_write(cmd,0);
     32e:	b0 cf       	rjmp	.-160    	; 0x290 <lcd_write>
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
     330:	df df       	rcall	.-66     	; 0x2f0 <lcd_waitbusy>
    lcd_write(cmd,0);
     332:	60 e0       	ldi	r22, 0x00	; 0
     334:	80 e8       	ldi	r24, 0x80	; 128
     336:	8c 0f       	add	r24, r28
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE3+x);
    else /* y==3 */
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE4+x);
#endif

}/* lcd_gotoxy */
     338:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
    lcd_write(cmd,0);
     33a:	aa cf       	rjmp	.-172    	; 0x290 <lcd_write>

0000033c <lcd_getxy>:

/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    return lcd_waitbusy();
     33c:	d9 df       	rcall	.-78     	; 0x2f0 <lcd_waitbusy>
}
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	08 95       	ret

00000342 <lcd_clrscr>:
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
     342:	d6 df       	rcall	.-84     	; 0x2f0 <lcd_waitbusy>
    lcd_write(cmd,0);
     344:	60 e0       	ldi	r22, 0x00	; 0
     346:	81 e0       	ldi	r24, 0x01	; 1
     348:	a3 cf       	rjmp	.-186    	; 0x290 <lcd_write>

0000034a <lcd_home>:
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
     34a:	d2 df       	rcall	.-92     	; 0x2f0 <lcd_waitbusy>
    lcd_write(cmd,0);
     34c:	60 e0       	ldi	r22, 0x00	; 0
     34e:	82 e0       	ldi	r24, 0x02	; 2
     350:	9f cf       	rjmp	.-194    	; 0x290 <lcd_write>

00000352 <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
     352:	cf 93       	push	r28
     354:	c8 2f       	mov	r28, r24
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
     356:	cc df       	rcall	.-104    	; 0x2f0 <lcd_waitbusy>
    if (c=='\n')
     358:	ca 30       	cpi	r28, 0x0A	; 10
     35a:	21 f0       	breq	.+8      	; 0x364 <lcd_putc+0x12>
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     35c:	61 e0       	ldi	r22, 0x01	; 1
     35e:	8c 2f       	mov	r24, r28
    }

}/* lcd_putc */
     360:	cf 91       	pop	r28
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     362:	96 cf       	rjmp	.-212    	; 0x290 <lcd_write>

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
     364:	80 34       	cpi	r24, 0x40	; 64
     366:	30 f0       	brcs	.+12     	; 0x374 <lcd_putc+0x22>
     368:	c0 e8       	ldi	r28, 0x80	; 128
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
     36a:	c2 df       	rcall	.-124    	; 0x2f0 <lcd_waitbusy>
    lcd_write(cmd,0);
     36c:	60 e0       	ldi	r22, 0x00	; 0
     36e:	8c 2f       	mov	r24, r28
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
    }

}/* lcd_putc */
     370:	cf 91       	pop	r28
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
    lcd_waitbusy();
    lcd_write(cmd,0);
     372:	8e cf       	rjmp	.-228    	; 0x290 <lcd_write>

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
     374:	c0 ec       	ldi	r28, 0xC0	; 192
     376:	f9 cf       	rjmp	.-14     	; 0x36a <lcd_putc+0x18>

00000378 <lcd_puts>:
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
    register char c;

    while ( (c = *s++) ) {
     37c:	ec 01       	movw	r28, r24
     37e:	21 96       	adiw	r28, 0x01	; 1
     380:	fc 01       	movw	r30, r24
     382:	80 81       	ld	r24, Z
     384:	88 23       	and	r24, r24
     386:	21 f0       	breq	.+8      	; 0x390 <lcd_puts+0x18>
        lcd_putc(c);
     388:	e4 df       	rcall	.-56     	; 0x352 <lcd_putc>
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
    register char c;

    while ( (c = *s++) ) {
     38a:	89 91       	ld	r24, Y+
     38c:	81 11       	cpse	r24, r1
     38e:	fc cf       	rjmp	.-8      	; 0x388 <lcd_puts+0x10>
        lcd_putc(c);
    }

}/* lcd_puts */
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
     39a:	ec 01       	movw	r28, r24
     39c:	21 96       	adiw	r28, 0x01	; 1
     39e:	fc 01       	movw	r30, r24
     3a0:	84 91       	lpm	r24, Z
     3a2:	88 23       	and	r24, r24
     3a4:	31 f0       	breq	.+12     	; 0x3b2 <lcd_puts_p+0x1c>
        lcd_putc(c);
     3a6:	d5 df       	rcall	.-86     	; 0x352 <lcd_putc>
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
     3a8:	fe 01       	movw	r30, r28
     3aa:	84 91       	lpm	r24, Z
     3ac:	21 96       	adiw	r28, 0x01	; 1
     3ae:	81 11       	cpse	r24, r1
     3b0:	fa cf       	rjmp	.-12     	; 0x3a6 <lcd_puts_p+0x10>
        lcd_putc(c);
    }

}/* lcd_puts_p */
     3b2:	df 91       	pop	r29
     3b4:	cf 91       	pop	r28
     3b6:	08 95       	ret

000003b8 <lcd_init>:
     3b8:	cf 93       	push	r28
     3ba:	c8 2f       	mov	r28, r24
     3bc:	94 b3       	in	r25, 0x14	; 20
     3be:	9f 60       	ori	r25, 0x0F	; 15
     3c0:	94 bb       	out	0x14, r25	; 20
     3c2:	8d 9a       	sbi	0x11, 5	; 17
     3c4:	8e 9a       	sbi	0x11, 6	; 17
     3c6:	8f 9a       	sbi	0x11, 7	; 17
     3c8:	e0 ec       	ldi	r30, 0xC0	; 192
     3ca:	fc ea       	ldi	r31, 0xAC	; 172
     3cc:	31 97       	sbiw	r30, 0x01	; 1
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <lcd_init+0x14>
     3d0:	a9 9a       	sbi	0x15, 1	; 21
     3d2:	a8 9a       	sbi	0x15, 0	; 21
     3d4:	97 9a       	sbi	0x12, 7	; 18
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <lcd_init+0x20>
     3d8:	97 98       	cbi	0x12, 7	; 18
     3da:	e5 ee       	ldi	r30, 0xE5	; 229
     3dc:	f5 e3       	ldi	r31, 0x35	; 53
     3de:	31 97       	sbiw	r30, 0x01	; 1
     3e0:	f1 f7       	brne	.-4      	; 0x3de <lcd_init+0x26>
     3e2:	97 9a       	sbi	0x12, 7	; 18
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <lcd_init+0x2e>
     3e6:	97 98       	cbi	0x12, 7	; 18
     3e8:	20 eb       	ldi	r18, 0xB0	; 176
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	f9 01       	movw	r30, r18
     3ee:	31 97       	sbiw	r30, 0x01	; 1
     3f0:	f1 f7       	brne	.-4      	; 0x3ee <lcd_init+0x36>
     3f2:	97 9a       	sbi	0x12, 7	; 18
     3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <lcd_init+0x3e>
     3f6:	97 98       	cbi	0x12, 7	; 18
     3f8:	f9 01       	movw	r30, r18
     3fa:	31 97       	sbiw	r30, 0x01	; 1
     3fc:	f1 f7       	brne	.-4      	; 0x3fa <lcd_init+0x42>
     3fe:	a8 98       	cbi	0x15, 0	; 21
     400:	97 9a       	sbi	0x12, 7	; 18
     402:	00 c0       	rjmp	.+0      	; 0x404 <lcd_init+0x4c>
     404:	97 98       	cbi	0x12, 7	; 18
     406:	f9 01       	movw	r30, r18
     408:	31 97       	sbiw	r30, 0x01	; 1
     40a:	f1 f7       	brne	.-4      	; 0x408 <lcd_init+0x50>
     40c:	71 df       	rcall	.-286    	; 0x2f0 <lcd_waitbusy>
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	88 e2       	ldi	r24, 0x28	; 40
     412:	3e df       	rcall	.-388    	; 0x290 <lcd_write>
     414:	6d df       	rcall	.-294    	; 0x2f0 <lcd_waitbusy>
     416:	60 e0       	ldi	r22, 0x00	; 0
     418:	88 e0       	ldi	r24, 0x08	; 8
     41a:	3a df       	rcall	.-396    	; 0x290 <lcd_write>
     41c:	69 df       	rcall	.-302    	; 0x2f0 <lcd_waitbusy>
     41e:	60 e0       	ldi	r22, 0x00	; 0
     420:	81 e0       	ldi	r24, 0x01	; 1
     422:	36 df       	rcall	.-404    	; 0x290 <lcd_write>
     424:	65 df       	rcall	.-310    	; 0x2f0 <lcd_waitbusy>
     426:	60 e0       	ldi	r22, 0x00	; 0
     428:	86 e0       	ldi	r24, 0x06	; 6
     42a:	32 df       	rcall	.-412    	; 0x290 <lcd_write>
     42c:	61 df       	rcall	.-318    	; 0x2f0 <lcd_waitbusy>
     42e:	60 e0       	ldi	r22, 0x00	; 0
     430:	8c 2f       	mov	r24, r28
     432:	cf 91       	pop	r28
     434:	2d cf       	rjmp	.-422    	; 0x290 <lcd_write>

00000436 <vfprintf>:
     436:	a3 e1       	ldi	r26, 0x13	; 19
     438:	b0 e0       	ldi	r27, 0x00	; 0
     43a:	e0 e2       	ldi	r30, 0x20	; 32
     43c:	f2 e0       	ldi	r31, 0x02	; 2
     43e:	c2 c3       	rjmp	.+1924   	; 0xbc4 <__prologue_saves__>
     440:	6c 01       	movw	r12, r24
     442:	4b 01       	movw	r8, r22
     444:	2a 01       	movw	r4, r20
     446:	fc 01       	movw	r30, r24
     448:	17 82       	std	Z+7, r1	; 0x07
     44a:	16 82       	std	Z+6, r1	; 0x06
     44c:	83 81       	ldd	r24, Z+3	; 0x03
     44e:	81 ff       	sbrs	r24, 1
     450:	29 c3       	rjmp	.+1618   	; 0xaa4 <__stack+0x645>
     452:	ae 01       	movw	r20, r28
     454:	4f 5f       	subi	r20, 0xFF	; 255
     456:	5f 4f       	sbci	r21, 0xFF	; 255
     458:	3a 01       	movw	r6, r20
     45a:	f6 01       	movw	r30, r12
     45c:	93 81       	ldd	r25, Z+3	; 0x03
     45e:	f4 01       	movw	r30, r8
     460:	93 fd       	sbrc	r25, 3
     462:	85 91       	lpm	r24, Z+
     464:	93 ff       	sbrs	r25, 3
     466:	81 91       	ld	r24, Z+
     468:	4f 01       	movw	r8, r30
     46a:	88 23       	and	r24, r24
     46c:	09 f4       	brne	.+2      	; 0x470 <__stack+0x11>
     46e:	16 c3       	rjmp	.+1580   	; 0xa9c <__stack+0x63d>
     470:	85 32       	cpi	r24, 0x25	; 37
     472:	39 f4       	brne	.+14     	; 0x482 <__stack+0x23>
     474:	93 fd       	sbrc	r25, 3
     476:	85 91       	lpm	r24, Z+
     478:	93 ff       	sbrs	r25, 3
     47a:	81 91       	ld	r24, Z+
     47c:	4f 01       	movw	r8, r30
     47e:	85 32       	cpi	r24, 0x25	; 37
     480:	31 f4       	brne	.+12     	; 0x48e <__stack+0x2f>
     482:	b6 01       	movw	r22, r12
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	4d d6       	rcall	.+3226   	; 0x1122 <fputc>
     488:	52 01       	movw	r10, r4
     48a:	25 01       	movw	r4, r10
     48c:	e6 cf       	rjmp	.-52     	; 0x45a <vfprintf+0x24>
     48e:	10 e0       	ldi	r17, 0x00	; 0
     490:	f1 2c       	mov	r15, r1
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	20 32       	cpi	r18, 0x20	; 32
     496:	a0 f4       	brcc	.+40     	; 0x4c0 <__stack+0x61>
     498:	8b 32       	cpi	r24, 0x2B	; 43
     49a:	69 f0       	breq	.+26     	; 0x4b6 <__stack+0x57>
     49c:	30 f4       	brcc	.+12     	; 0x4aa <__stack+0x4b>
     49e:	80 32       	cpi	r24, 0x20	; 32
     4a0:	59 f0       	breq	.+22     	; 0x4b8 <__stack+0x59>
     4a2:	83 32       	cpi	r24, 0x23	; 35
     4a4:	69 f4       	brne	.+26     	; 0x4c0 <__stack+0x61>
     4a6:	20 61       	ori	r18, 0x10	; 16
     4a8:	2c c0       	rjmp	.+88     	; 0x502 <__stack+0xa3>
     4aa:	8d 32       	cpi	r24, 0x2D	; 45
     4ac:	39 f0       	breq	.+14     	; 0x4bc <__stack+0x5d>
     4ae:	80 33       	cpi	r24, 0x30	; 48
     4b0:	39 f4       	brne	.+14     	; 0x4c0 <__stack+0x61>
     4b2:	21 60       	ori	r18, 0x01	; 1
     4b4:	26 c0       	rjmp	.+76     	; 0x502 <__stack+0xa3>
     4b6:	22 60       	ori	r18, 0x02	; 2
     4b8:	24 60       	ori	r18, 0x04	; 4
     4ba:	23 c0       	rjmp	.+70     	; 0x502 <__stack+0xa3>
     4bc:	28 60       	ori	r18, 0x08	; 8
     4be:	21 c0       	rjmp	.+66     	; 0x502 <__stack+0xa3>
     4c0:	27 fd       	sbrc	r18, 7
     4c2:	27 c0       	rjmp	.+78     	; 0x512 <__stack+0xb3>
     4c4:	30 ed       	ldi	r19, 0xD0	; 208
     4c6:	38 0f       	add	r19, r24
     4c8:	3a 30       	cpi	r19, 0x0A	; 10
     4ca:	78 f4       	brcc	.+30     	; 0x4ea <__stack+0x8b>
     4cc:	26 ff       	sbrs	r18, 6
     4ce:	06 c0       	rjmp	.+12     	; 0x4dc <__stack+0x7d>
     4d0:	fa e0       	ldi	r31, 0x0A	; 10
     4d2:	1f 9f       	mul	r17, r31
     4d4:	30 0d       	add	r19, r0
     4d6:	11 24       	eor	r1, r1
     4d8:	13 2f       	mov	r17, r19
     4da:	13 c0       	rjmp	.+38     	; 0x502 <__stack+0xa3>
     4dc:	4a e0       	ldi	r20, 0x0A	; 10
     4de:	f4 9e       	mul	r15, r20
     4e0:	30 0d       	add	r19, r0
     4e2:	11 24       	eor	r1, r1
     4e4:	f3 2e       	mov	r15, r19
     4e6:	20 62       	ori	r18, 0x20	; 32
     4e8:	0c c0       	rjmp	.+24     	; 0x502 <__stack+0xa3>
     4ea:	8e 32       	cpi	r24, 0x2E	; 46
     4ec:	21 f4       	brne	.+8      	; 0x4f6 <__stack+0x97>
     4ee:	26 fd       	sbrc	r18, 6
     4f0:	d5 c2       	rjmp	.+1450   	; 0xa9c <__stack+0x63d>
     4f2:	20 64       	ori	r18, 0x40	; 64
     4f4:	06 c0       	rjmp	.+12     	; 0x502 <__stack+0xa3>
     4f6:	8c 36       	cpi	r24, 0x6C	; 108
     4f8:	11 f4       	brne	.+4      	; 0x4fe <__stack+0x9f>
     4fa:	20 68       	ori	r18, 0x80	; 128
     4fc:	02 c0       	rjmp	.+4      	; 0x502 <__stack+0xa3>
     4fe:	88 36       	cpi	r24, 0x68	; 104
     500:	41 f4       	brne	.+16     	; 0x512 <__stack+0xb3>
     502:	f4 01       	movw	r30, r8
     504:	93 fd       	sbrc	r25, 3
     506:	85 91       	lpm	r24, Z+
     508:	93 ff       	sbrs	r25, 3
     50a:	81 91       	ld	r24, Z+
     50c:	4f 01       	movw	r8, r30
     50e:	81 11       	cpse	r24, r1
     510:	c1 cf       	rjmp	.-126    	; 0x494 <__stack+0x35>
     512:	9b eb       	ldi	r25, 0xBB	; 187
     514:	98 0f       	add	r25, r24
     516:	93 30       	cpi	r25, 0x03	; 3
     518:	18 f4       	brcc	.+6      	; 0x520 <__stack+0xc1>
     51a:	20 61       	ori	r18, 0x10	; 16
     51c:	80 5e       	subi	r24, 0xE0	; 224
     51e:	06 c0       	rjmp	.+12     	; 0x52c <__stack+0xcd>
     520:	9b e9       	ldi	r25, 0x9B	; 155
     522:	98 0f       	add	r25, r24
     524:	93 30       	cpi	r25, 0x03	; 3
     526:	08 f0       	brcs	.+2      	; 0x52a <__stack+0xcb>
     528:	64 c1       	rjmp	.+712    	; 0x7f2 <__stack+0x393>
     52a:	2f 7e       	andi	r18, 0xEF	; 239
     52c:	26 ff       	sbrs	r18, 6
     52e:	16 e0       	ldi	r17, 0x06	; 6
     530:	2f 73       	andi	r18, 0x3F	; 63
     532:	32 2e       	mov	r3, r18
     534:	85 36       	cpi	r24, 0x65	; 101
     536:	19 f4       	brne	.+6      	; 0x53e <__stack+0xdf>
     538:	20 64       	ori	r18, 0x40	; 64
     53a:	32 2e       	mov	r3, r18
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__stack+0xef>
     53e:	86 36       	cpi	r24, 0x66	; 102
     540:	21 f4       	brne	.+8      	; 0x54a <__stack+0xeb>
     542:	f2 2f       	mov	r31, r18
     544:	f0 68       	ori	r31, 0x80	; 128
     546:	3f 2e       	mov	r3, r31
     548:	02 c0       	rjmp	.+4      	; 0x54e <__stack+0xef>
     54a:	11 11       	cpse	r17, r1
     54c:	11 50       	subi	r17, 0x01	; 1
     54e:	37 fe       	sbrs	r3, 7
     550:	07 c0       	rjmp	.+14     	; 0x560 <__stack+0x101>
     552:	1c 33       	cpi	r17, 0x3C	; 60
     554:	50 f4       	brcc	.+20     	; 0x56a <__stack+0x10b>
     556:	ee 24       	eor	r14, r14
     558:	e3 94       	inc	r14
     55a:	e1 0e       	add	r14, r17
     55c:	27 e0       	ldi	r18, 0x07	; 7
     55e:	0b c0       	rjmp	.+22     	; 0x576 <__stack+0x117>
     560:	18 30       	cpi	r17, 0x08	; 8
     562:	38 f0       	brcs	.+14     	; 0x572 <__stack+0x113>
     564:	27 e0       	ldi	r18, 0x07	; 7
     566:	17 e0       	ldi	r17, 0x07	; 7
     568:	05 c0       	rjmp	.+10     	; 0x574 <__stack+0x115>
     56a:	27 e0       	ldi	r18, 0x07	; 7
     56c:	4c e3       	ldi	r20, 0x3C	; 60
     56e:	e4 2e       	mov	r14, r20
     570:	02 c0       	rjmp	.+4      	; 0x576 <__stack+0x117>
     572:	21 2f       	mov	r18, r17
     574:	e1 2c       	mov	r14, r1
     576:	52 01       	movw	r10, r4
     578:	44 e0       	ldi	r20, 0x04	; 4
     57a:	a4 0e       	add	r10, r20
     57c:	b1 1c       	adc	r11, r1
     57e:	f2 01       	movw	r30, r4
     580:	60 81       	ld	r22, Z
     582:	71 81       	ldd	r23, Z+1	; 0x01
     584:	82 81       	ldd	r24, Z+2	; 0x02
     586:	93 81       	ldd	r25, Z+3	; 0x03
     588:	0e 2d       	mov	r16, r14
     58a:	a3 01       	movw	r20, r6
     58c:	dc d4       	rcall	.+2488   	; 0xf46 <__ftoa_engine>
     58e:	2c 01       	movw	r4, r24
     590:	09 81       	ldd	r16, Y+1	; 0x01
     592:	00 ff       	sbrs	r16, 0
     594:	02 c0       	rjmp	.+4      	; 0x59a <__stack+0x13b>
     596:	03 ff       	sbrs	r16, 3
     598:	07 c0       	rjmp	.+14     	; 0x5a8 <__stack+0x149>
     59a:	31 fc       	sbrc	r3, 1
     59c:	08 c0       	rjmp	.+16     	; 0x5ae <__stack+0x14f>
     59e:	32 fe       	sbrs	r3, 2
     5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <__stack+0x155>
     5a2:	30 e2       	ldi	r19, 0x20	; 32
     5a4:	23 2e       	mov	r2, r19
     5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <__stack+0x157>
     5a8:	2d e2       	ldi	r18, 0x2D	; 45
     5aa:	22 2e       	mov	r2, r18
     5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <__stack+0x157>
     5ae:	9b e2       	ldi	r25, 0x2B	; 43
     5b0:	29 2e       	mov	r2, r25
     5b2:	01 c0       	rjmp	.+2      	; 0x5b6 <__stack+0x157>
     5b4:	21 2c       	mov	r2, r1
     5b6:	80 2f       	mov	r24, r16
     5b8:	8c 70       	andi	r24, 0x0C	; 12
     5ba:	19 f0       	breq	.+6      	; 0x5c2 <__stack+0x163>
     5bc:	21 10       	cpse	r2, r1
     5be:	51 c2       	rjmp	.+1186   	; 0xa62 <__stack+0x603>
     5c0:	8d c2       	rjmp	.+1306   	; 0xadc <__stack+0x67d>
     5c2:	37 fe       	sbrs	r3, 7
     5c4:	0f c0       	rjmp	.+30     	; 0x5e4 <__stack+0x185>
     5c6:	e4 0c       	add	r14, r4
     5c8:	04 ff       	sbrs	r16, 4
     5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <__stack+0x175>
     5cc:	8a 81       	ldd	r24, Y+2	; 0x02
     5ce:	81 33       	cpi	r24, 0x31	; 49
     5d0:	09 f4       	brne	.+2      	; 0x5d4 <__stack+0x175>
     5d2:	ea 94       	dec	r14
     5d4:	1e 14       	cp	r1, r14
     5d6:	74 f5       	brge	.+92     	; 0x634 <__stack+0x1d5>
     5d8:	f8 e0       	ldi	r31, 0x08	; 8
     5da:	fe 15       	cp	r31, r14
     5dc:	78 f5       	brcc	.+94     	; 0x63c <__stack+0x1dd>
     5de:	88 e0       	ldi	r24, 0x08	; 8
     5e0:	e8 2e       	mov	r14, r24
     5e2:	2c c0       	rjmp	.+88     	; 0x63c <__stack+0x1dd>
     5e4:	36 fc       	sbrc	r3, 6
     5e6:	2a c0       	rjmp	.+84     	; 0x63c <__stack+0x1dd>
     5e8:	81 2f       	mov	r24, r17
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	84 15       	cp	r24, r4
     5ee:	95 05       	cpc	r25, r5
     5f0:	9c f0       	brlt	.+38     	; 0x618 <__stack+0x1b9>
     5f2:	2c ef       	ldi	r18, 0xFC	; 252
     5f4:	42 16       	cp	r4, r18
     5f6:	2f ef       	ldi	r18, 0xFF	; 255
     5f8:	52 06       	cpc	r5, r18
     5fa:	74 f0       	brlt	.+28     	; 0x618 <__stack+0x1b9>
     5fc:	43 2d       	mov	r20, r3
     5fe:	40 68       	ori	r20, 0x80	; 128
     600:	34 2e       	mov	r3, r20
     602:	0a c0       	rjmp	.+20     	; 0x618 <__stack+0x1b9>
     604:	e2 e0       	ldi	r30, 0x02	; 2
     606:	f0 e0       	ldi	r31, 0x00	; 0
     608:	ec 0f       	add	r30, r28
     60a:	fd 1f       	adc	r31, r29
     60c:	e1 0f       	add	r30, r17
     60e:	f1 1d       	adc	r31, r1
     610:	80 81       	ld	r24, Z
     612:	80 33       	cpi	r24, 0x30	; 48
     614:	19 f4       	brne	.+6      	; 0x61c <__stack+0x1bd>
     616:	11 50       	subi	r17, 0x01	; 1
     618:	11 11       	cpse	r17, r1
     61a:	f4 cf       	rjmp	.-24     	; 0x604 <__stack+0x1a5>
     61c:	37 fe       	sbrs	r3, 7
     61e:	0e c0       	rjmp	.+28     	; 0x63c <__stack+0x1dd>
     620:	ee 24       	eor	r14, r14
     622:	e3 94       	inc	r14
     624:	e1 0e       	add	r14, r17
     626:	81 2f       	mov	r24, r17
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	48 16       	cp	r4, r24
     62c:	59 06       	cpc	r5, r25
     62e:	2c f4       	brge	.+10     	; 0x63a <__stack+0x1db>
     630:	14 19       	sub	r17, r4
     632:	04 c0       	rjmp	.+8      	; 0x63c <__stack+0x1dd>
     634:	ee 24       	eor	r14, r14
     636:	e3 94       	inc	r14
     638:	01 c0       	rjmp	.+2      	; 0x63c <__stack+0x1dd>
     63a:	10 e0       	ldi	r17, 0x00	; 0
     63c:	37 fe       	sbrs	r3, 7
     63e:	06 c0       	rjmp	.+12     	; 0x64c <__stack+0x1ed>
     640:	14 14       	cp	r1, r4
     642:	15 04       	cpc	r1, r5
     644:	34 f4       	brge	.+12     	; 0x652 <__stack+0x1f3>
     646:	c2 01       	movw	r24, r4
     648:	01 96       	adiw	r24, 0x01	; 1
     64a:	05 c0       	rjmp	.+10     	; 0x656 <__stack+0x1f7>
     64c:	85 e0       	ldi	r24, 0x05	; 5
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	02 c0       	rjmp	.+4      	; 0x656 <__stack+0x1f7>
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	21 10       	cpse	r2, r1
     658:	01 96       	adiw	r24, 0x01	; 1
     65a:	11 23       	and	r17, r17
     65c:	31 f0       	breq	.+12     	; 0x66a <__stack+0x20b>
     65e:	21 2f       	mov	r18, r17
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	2f 5f       	subi	r18, 0xFF	; 255
     664:	3f 4f       	sbci	r19, 0xFF	; 255
     666:	82 0f       	add	r24, r18
     668:	93 1f       	adc	r25, r19
     66a:	2f 2d       	mov	r18, r15
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	82 17       	cp	r24, r18
     670:	93 07       	cpc	r25, r19
     672:	14 f4       	brge	.+4      	; 0x678 <__stack+0x219>
     674:	f8 1a       	sub	r15, r24
     676:	01 c0       	rjmp	.+2      	; 0x67a <__stack+0x21b>
     678:	f1 2c       	mov	r15, r1
     67a:	83 2d       	mov	r24, r3
     67c:	89 70       	andi	r24, 0x09	; 9
     67e:	41 f4       	brne	.+16     	; 0x690 <__stack+0x231>
     680:	ff 20       	and	r15, r15
     682:	31 f0       	breq	.+12     	; 0x690 <__stack+0x231>
     684:	b6 01       	movw	r22, r12
     686:	80 e2       	ldi	r24, 0x20	; 32
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	4b d5       	rcall	.+2710   	; 0x1122 <fputc>
     68c:	fa 94       	dec	r15
     68e:	f8 cf       	rjmp	.-16     	; 0x680 <__stack+0x221>
     690:	22 20       	and	r2, r2
     692:	21 f0       	breq	.+8      	; 0x69c <__stack+0x23d>
     694:	b6 01       	movw	r22, r12
     696:	82 2d       	mov	r24, r2
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	43 d5       	rcall	.+2694   	; 0x1122 <fputc>
     69c:	33 fc       	sbrc	r3, 3
     69e:	08 c0       	rjmp	.+16     	; 0x6b0 <__stack+0x251>
     6a0:	ff 20       	and	r15, r15
     6a2:	31 f0       	breq	.+12     	; 0x6b0 <__stack+0x251>
     6a4:	b6 01       	movw	r22, r12
     6a6:	80 e3       	ldi	r24, 0x30	; 48
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	3b d5       	rcall	.+2678   	; 0x1122 <fputc>
     6ac:	fa 94       	dec	r15
     6ae:	f8 cf       	rjmp	.-16     	; 0x6a0 <__stack+0x241>
     6b0:	37 fe       	sbrs	r3, 7
     6b2:	58 c0       	rjmp	.+176    	; 0x764 <__stack+0x305>
     6b4:	94 2d       	mov	r25, r4
     6b6:	85 2d       	mov	r24, r5
     6b8:	57 fe       	sbrs	r5, 7
     6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <__stack+0x261>
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	29 2e       	mov	r2, r25
     6c2:	38 2e       	mov	r3, r24
     6c4:	20 e0       	ldi	r18, 0x00	; 0
     6c6:	30 e0       	ldi	r19, 0x00	; 0
     6c8:	a2 01       	movw	r20, r4
     6ca:	4e 19       	sub	r20, r14
     6cc:	51 09       	sbc	r21, r1
     6ce:	5d 87       	std	Y+13, r21	; 0x0d
     6d0:	4c 87       	std	Y+12, r20	; 0x0c
     6d2:	a2 01       	movw	r20, r4
     6d4:	42 19       	sub	r20, r2
     6d6:	53 09       	sbc	r21, r3
     6d8:	5f 87       	std	Y+15, r21	; 0x0f
     6da:	4e 87       	std	Y+14, r20	; 0x0e
     6dc:	61 2f       	mov	r22, r17
     6de:	70 e0       	ldi	r23, 0x00	; 0
     6e0:	44 27       	eor	r20, r20
     6e2:	55 27       	eor	r21, r21
     6e4:	46 1b       	sub	r20, r22
     6e6:	57 0b       	sbc	r21, r23
     6e8:	59 8b       	std	Y+17, r21	; 0x11
     6ea:	48 8b       	std	Y+16, r20	; 0x10
     6ec:	5f ef       	ldi	r21, 0xFF	; 255
     6ee:	25 16       	cp	r2, r21
     6f0:	35 06       	cpc	r3, r21
     6f2:	41 f4       	brne	.+16     	; 0x704 <__stack+0x2a5>
     6f4:	b6 01       	movw	r22, r12
     6f6:	8e e2       	ldi	r24, 0x2E	; 46
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	2a 8b       	std	Y+18, r18	; 0x12
     6fc:	3b 8b       	std	Y+19, r19	; 0x13
     6fe:	11 d5       	rcall	.+2594   	; 0x1122 <fputc>
     700:	3b 89       	ldd	r19, Y+19	; 0x13
     702:	2a 89       	ldd	r18, Y+18	; 0x12
     704:	42 14       	cp	r4, r2
     706:	53 04       	cpc	r5, r3
     708:	6c f0       	brlt	.+26     	; 0x724 <__stack+0x2c5>
     70a:	4c 85       	ldd	r20, Y+12	; 0x0c
     70c:	5d 85       	ldd	r21, Y+13	; 0x0d
     70e:	42 15       	cp	r20, r2
     710:	53 05       	cpc	r21, r3
     712:	44 f4       	brge	.+16     	; 0x724 <__stack+0x2c5>
     714:	ee 85       	ldd	r30, Y+14	; 0x0e
     716:	ff 85       	ldd	r31, Y+15	; 0x0f
     718:	e2 0f       	add	r30, r18
     71a:	f3 1f       	adc	r31, r19
     71c:	e6 0d       	add	r30, r6
     71e:	f7 1d       	adc	r31, r7
     720:	81 81       	ldd	r24, Z+1	; 0x01
     722:	01 c0       	rjmp	.+2      	; 0x726 <__stack+0x2c7>
     724:	80 e3       	ldi	r24, 0x30	; 48
     726:	51 e0       	ldi	r21, 0x01	; 1
     728:	25 1a       	sub	r2, r21
     72a:	31 08       	sbc	r3, r1
     72c:	2f 5f       	subi	r18, 0xFF	; 255
     72e:	3f 4f       	sbci	r19, 0xFF	; 255
     730:	48 89       	ldd	r20, Y+16	; 0x10
     732:	59 89       	ldd	r21, Y+17	; 0x11
     734:	24 16       	cp	r2, r20
     736:	35 06       	cpc	r3, r21
     738:	44 f0       	brlt	.+16     	; 0x74a <__stack+0x2eb>
     73a:	b6 01       	movw	r22, r12
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	2a 8b       	std	Y+18, r18	; 0x12
     740:	3b 8b       	std	Y+19, r19	; 0x13
     742:	ef d4       	rcall	.+2526   	; 0x1122 <fputc>
     744:	2a 89       	ldd	r18, Y+18	; 0x12
     746:	3b 89       	ldd	r19, Y+19	; 0x13
     748:	d1 cf       	rjmp	.-94     	; 0x6ec <__stack+0x28d>
     74a:	24 14       	cp	r2, r4
     74c:	35 04       	cpc	r3, r5
     74e:	39 f4       	brne	.+14     	; 0x75e <__stack+0x2ff>
     750:	9a 81       	ldd	r25, Y+2	; 0x02
     752:	96 33       	cpi	r25, 0x36	; 54
     754:	18 f4       	brcc	.+6      	; 0x75c <__stack+0x2fd>
     756:	95 33       	cpi	r25, 0x35	; 53
     758:	11 f4       	brne	.+4      	; 0x75e <__stack+0x2ff>
     75a:	04 ff       	sbrs	r16, 4
     75c:	81 e3       	ldi	r24, 0x31	; 49
     75e:	b6 01       	movw	r22, r12
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	45 c0       	rjmp	.+138    	; 0x7ee <__stack+0x38f>
     764:	8a 81       	ldd	r24, Y+2	; 0x02
     766:	81 33       	cpi	r24, 0x31	; 49
     768:	09 f0       	breq	.+2      	; 0x76c <__stack+0x30d>
     76a:	0f 7e       	andi	r16, 0xEF	; 239
     76c:	b6 01       	movw	r22, r12
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	d8 d4       	rcall	.+2480   	; 0x1122 <fputc>
     772:	11 11       	cpse	r17, r1
     774:	05 c0       	rjmp	.+10     	; 0x780 <__stack+0x321>
     776:	34 fc       	sbrc	r3, 4
     778:	16 c0       	rjmp	.+44     	; 0x7a6 <__stack+0x347>
     77a:	85 e6       	ldi	r24, 0x65	; 101
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	15 c0       	rjmp	.+42     	; 0x7aa <__stack+0x34b>
     780:	b6 01       	movw	r22, r12
     782:	8e e2       	ldi	r24, 0x2E	; 46
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	cd d4       	rcall	.+2458   	; 0x1122 <fputc>
     788:	82 e0       	ldi	r24, 0x02	; 2
     78a:	ee 24       	eor	r14, r14
     78c:	e3 94       	inc	r14
     78e:	e8 0e       	add	r14, r24
     790:	f3 01       	movw	r30, r6
     792:	e8 0f       	add	r30, r24
     794:	f1 1d       	adc	r31, r1
     796:	80 81       	ld	r24, Z
     798:	b6 01       	movw	r22, r12
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	c2 d4       	rcall	.+2436   	; 0x1122 <fputc>
     79e:	11 50       	subi	r17, 0x01	; 1
     7a0:	8e 2d       	mov	r24, r14
     7a2:	99 f7       	brne	.-26     	; 0x78a <__stack+0x32b>
     7a4:	e8 cf       	rjmp	.-48     	; 0x776 <__stack+0x317>
     7a6:	85 e4       	ldi	r24, 0x45	; 69
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	b6 01       	movw	r22, r12
     7ac:	ba d4       	rcall	.+2420   	; 0x1122 <fputc>
     7ae:	57 fc       	sbrc	r5, 7
     7b0:	05 c0       	rjmp	.+10     	; 0x7bc <__stack+0x35d>
     7b2:	41 14       	cp	r4, r1
     7b4:	51 04       	cpc	r5, r1
     7b6:	39 f4       	brne	.+14     	; 0x7c6 <__stack+0x367>
     7b8:	04 ff       	sbrs	r16, 4
     7ba:	05 c0       	rjmp	.+10     	; 0x7c6 <__stack+0x367>
     7bc:	51 94       	neg	r5
     7be:	41 94       	neg	r4
     7c0:	51 08       	sbc	r5, r1
     7c2:	8d e2       	ldi	r24, 0x2D	; 45
     7c4:	01 c0       	rjmp	.+2      	; 0x7c8 <__stack+0x369>
     7c6:	8b e2       	ldi	r24, 0x2B	; 43
     7c8:	b6 01       	movw	r22, r12
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	aa d4       	rcall	.+2388   	; 0x1122 <fputc>
     7ce:	80 e3       	ldi	r24, 0x30	; 48
     7d0:	9a e0       	ldi	r25, 0x0A	; 10
     7d2:	49 16       	cp	r4, r25
     7d4:	51 04       	cpc	r5, r1
     7d6:	2c f0       	brlt	.+10     	; 0x7e2 <__stack+0x383>
     7d8:	8f 5f       	subi	r24, 0xFF	; 255
     7da:	5a e0       	ldi	r21, 0x0A	; 10
     7dc:	45 1a       	sub	r4, r21
     7de:	51 08       	sbc	r5, r1
     7e0:	f7 cf       	rjmp	.-18     	; 0x7d0 <__stack+0x371>
     7e2:	b6 01       	movw	r22, r12
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	9d d4       	rcall	.+2362   	; 0x1122 <fputc>
     7e8:	b6 01       	movw	r22, r12
     7ea:	c2 01       	movw	r24, r4
     7ec:	c0 96       	adiw	r24, 0x30	; 48
     7ee:	99 d4       	rcall	.+2354   	; 0x1122 <fputc>
     7f0:	4c c1       	rjmp	.+664    	; 0xa8a <__stack+0x62b>
     7f2:	83 36       	cpi	r24, 0x63	; 99
     7f4:	31 f0       	breq	.+12     	; 0x802 <__stack+0x3a3>
     7f6:	83 37       	cpi	r24, 0x73	; 115
     7f8:	79 f0       	breq	.+30     	; 0x818 <__stack+0x3b9>
     7fa:	83 35       	cpi	r24, 0x53	; 83
     7fc:	09 f0       	breq	.+2      	; 0x800 <__stack+0x3a1>
     7fe:	54 c0       	rjmp	.+168    	; 0x8a8 <__stack+0x449>
     800:	20 c0       	rjmp	.+64     	; 0x842 <__stack+0x3e3>
     802:	52 01       	movw	r10, r4
     804:	e2 e0       	ldi	r30, 0x02	; 2
     806:	ae 0e       	add	r10, r30
     808:	b1 1c       	adc	r11, r1
     80a:	f2 01       	movw	r30, r4
     80c:	80 81       	ld	r24, Z
     80e:	89 83       	std	Y+1, r24	; 0x01
     810:	01 e0       	ldi	r16, 0x01	; 1
     812:	10 e0       	ldi	r17, 0x00	; 0
     814:	23 01       	movw	r4, r6
     816:	13 c0       	rjmp	.+38     	; 0x83e <__stack+0x3df>
     818:	52 01       	movw	r10, r4
     81a:	f2 e0       	ldi	r31, 0x02	; 2
     81c:	af 0e       	add	r10, r31
     81e:	b1 1c       	adc	r11, r1
     820:	f2 01       	movw	r30, r4
     822:	40 80       	ld	r4, Z
     824:	51 80       	ldd	r5, Z+1	; 0x01
     826:	26 ff       	sbrs	r18, 6
     828:	03 c0       	rjmp	.+6      	; 0x830 <__stack+0x3d1>
     82a:	61 2f       	mov	r22, r17
     82c:	70 e0       	ldi	r23, 0x00	; 0
     82e:	02 c0       	rjmp	.+4      	; 0x834 <__stack+0x3d5>
     830:	6f ef       	ldi	r22, 0xFF	; 255
     832:	7f ef       	ldi	r23, 0xFF	; 255
     834:	c2 01       	movw	r24, r4
     836:	2a 8b       	std	Y+18, r18	; 0x12
     838:	69 d4       	rcall	.+2258   	; 0x110c <strnlen>
     83a:	8c 01       	movw	r16, r24
     83c:	2a 89       	ldd	r18, Y+18	; 0x12
     83e:	2f 77       	andi	r18, 0x7F	; 127
     840:	14 c0       	rjmp	.+40     	; 0x86a <__stack+0x40b>
     842:	52 01       	movw	r10, r4
     844:	f2 e0       	ldi	r31, 0x02	; 2
     846:	af 0e       	add	r10, r31
     848:	b1 1c       	adc	r11, r1
     84a:	f2 01       	movw	r30, r4
     84c:	40 80       	ld	r4, Z
     84e:	51 80       	ldd	r5, Z+1	; 0x01
     850:	26 ff       	sbrs	r18, 6
     852:	03 c0       	rjmp	.+6      	; 0x85a <__stack+0x3fb>
     854:	61 2f       	mov	r22, r17
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	02 c0       	rjmp	.+4      	; 0x85e <__stack+0x3ff>
     85a:	6f ef       	ldi	r22, 0xFF	; 255
     85c:	7f ef       	ldi	r23, 0xFF	; 255
     85e:	c2 01       	movw	r24, r4
     860:	2a 8b       	std	Y+18, r18	; 0x12
     862:	49 d4       	rcall	.+2194   	; 0x10f6 <strnlen_P>
     864:	8c 01       	movw	r16, r24
     866:	2a 89       	ldd	r18, Y+18	; 0x12
     868:	20 68       	ori	r18, 0x80	; 128
     86a:	32 2e       	mov	r3, r18
     86c:	23 fd       	sbrc	r18, 3
     86e:	18 c0       	rjmp	.+48     	; 0x8a0 <__stack+0x441>
     870:	8f 2d       	mov	r24, r15
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	08 17       	cp	r16, r24
     876:	19 07       	cpc	r17, r25
     878:	98 f4       	brcc	.+38     	; 0x8a0 <__stack+0x441>
     87a:	b6 01       	movw	r22, r12
     87c:	80 e2       	ldi	r24, 0x20	; 32
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	50 d4       	rcall	.+2208   	; 0x1122 <fputc>
     882:	fa 94       	dec	r15
     884:	f5 cf       	rjmp	.-22     	; 0x870 <__stack+0x411>
     886:	f2 01       	movw	r30, r4
     888:	37 fc       	sbrc	r3, 7
     88a:	85 91       	lpm	r24, Z+
     88c:	37 fe       	sbrs	r3, 7
     88e:	81 91       	ld	r24, Z+
     890:	2f 01       	movw	r4, r30
     892:	b6 01       	movw	r22, r12
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	45 d4       	rcall	.+2186   	; 0x1122 <fputc>
     898:	f1 10       	cpse	r15, r1
     89a:	fa 94       	dec	r15
     89c:	01 50       	subi	r16, 0x01	; 1
     89e:	11 09       	sbc	r17, r1
     8a0:	01 15       	cp	r16, r1
     8a2:	11 05       	cpc	r17, r1
     8a4:	81 f7       	brne	.-32     	; 0x886 <__stack+0x427>
     8a6:	f1 c0       	rjmp	.+482    	; 0xa8a <__stack+0x62b>
     8a8:	84 36       	cpi	r24, 0x64	; 100
     8aa:	11 f0       	breq	.+4      	; 0x8b0 <__stack+0x451>
     8ac:	89 36       	cpi	r24, 0x69	; 105
     8ae:	51 f5       	brne	.+84     	; 0x904 <__stack+0x4a5>
     8b0:	52 01       	movw	r10, r4
     8b2:	27 ff       	sbrs	r18, 7
     8b4:	09 c0       	rjmp	.+18     	; 0x8c8 <__stack+0x469>
     8b6:	f4 e0       	ldi	r31, 0x04	; 4
     8b8:	af 0e       	add	r10, r31
     8ba:	b1 1c       	adc	r11, r1
     8bc:	f2 01       	movw	r30, r4
     8be:	60 81       	ld	r22, Z
     8c0:	71 81       	ldd	r23, Z+1	; 0x01
     8c2:	82 81       	ldd	r24, Z+2	; 0x02
     8c4:	93 81       	ldd	r25, Z+3	; 0x03
     8c6:	0a c0       	rjmp	.+20     	; 0x8dc <__stack+0x47d>
     8c8:	f2 e0       	ldi	r31, 0x02	; 2
     8ca:	af 0e       	add	r10, r31
     8cc:	b1 1c       	adc	r11, r1
     8ce:	f2 01       	movw	r30, r4
     8d0:	60 81       	ld	r22, Z
     8d2:	71 81       	ldd	r23, Z+1	; 0x01
     8d4:	07 2e       	mov	r0, r23
     8d6:	00 0c       	add	r0, r0
     8d8:	88 0b       	sbc	r24, r24
     8da:	99 0b       	sbc	r25, r25
     8dc:	2f 76       	andi	r18, 0x6F	; 111
     8de:	32 2e       	mov	r3, r18
     8e0:	97 ff       	sbrs	r25, 7
     8e2:	09 c0       	rjmp	.+18     	; 0x8f6 <__stack+0x497>
     8e4:	90 95       	com	r25
     8e6:	80 95       	com	r24
     8e8:	70 95       	com	r23
     8ea:	61 95       	neg	r22
     8ec:	7f 4f       	sbci	r23, 0xFF	; 255
     8ee:	8f 4f       	sbci	r24, 0xFF	; 255
     8f0:	9f 4f       	sbci	r25, 0xFF	; 255
     8f2:	20 68       	ori	r18, 0x80	; 128
     8f4:	32 2e       	mov	r3, r18
     8f6:	2a e0       	ldi	r18, 0x0A	; 10
     8f8:	30 e0       	ldi	r19, 0x00	; 0
     8fa:	a3 01       	movw	r20, r6
     8fc:	6a d4       	rcall	.+2260   	; 0x11d2 <__ultoa_invert>
     8fe:	e8 2e       	mov	r14, r24
     900:	e6 18       	sub	r14, r6
     902:	3e c0       	rjmp	.+124    	; 0x980 <__stack+0x521>
     904:	02 2f       	mov	r16, r18
     906:	85 37       	cpi	r24, 0x75	; 117
     908:	21 f4       	brne	.+8      	; 0x912 <__stack+0x4b3>
     90a:	0f 7e       	andi	r16, 0xEF	; 239
     90c:	2a e0       	ldi	r18, 0x0A	; 10
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	1d c0       	rjmp	.+58     	; 0x94c <__stack+0x4ed>
     912:	09 7f       	andi	r16, 0xF9	; 249
     914:	8f 36       	cpi	r24, 0x6F	; 111
     916:	91 f0       	breq	.+36     	; 0x93c <__stack+0x4dd>
     918:	18 f4       	brcc	.+6      	; 0x920 <__stack+0x4c1>
     91a:	88 35       	cpi	r24, 0x58	; 88
     91c:	59 f0       	breq	.+22     	; 0x934 <__stack+0x4d5>
     91e:	be c0       	rjmp	.+380    	; 0xa9c <__stack+0x63d>
     920:	80 37       	cpi	r24, 0x70	; 112
     922:	19 f0       	breq	.+6      	; 0x92a <__stack+0x4cb>
     924:	88 37       	cpi	r24, 0x78	; 120
     926:	11 f0       	breq	.+4      	; 0x92c <__stack+0x4cd>
     928:	b9 c0       	rjmp	.+370    	; 0xa9c <__stack+0x63d>
     92a:	00 61       	ori	r16, 0x10	; 16
     92c:	04 ff       	sbrs	r16, 4
     92e:	09 c0       	rjmp	.+18     	; 0x942 <__stack+0x4e3>
     930:	04 60       	ori	r16, 0x04	; 4
     932:	07 c0       	rjmp	.+14     	; 0x942 <__stack+0x4e3>
     934:	24 ff       	sbrs	r18, 4
     936:	08 c0       	rjmp	.+16     	; 0x948 <__stack+0x4e9>
     938:	06 60       	ori	r16, 0x06	; 6
     93a:	06 c0       	rjmp	.+12     	; 0x948 <__stack+0x4e9>
     93c:	28 e0       	ldi	r18, 0x08	; 8
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0x4ed>
     942:	20 e1       	ldi	r18, 0x10	; 16
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	02 c0       	rjmp	.+4      	; 0x94c <__stack+0x4ed>
     948:	20 e1       	ldi	r18, 0x10	; 16
     94a:	32 e0       	ldi	r19, 0x02	; 2
     94c:	52 01       	movw	r10, r4
     94e:	07 ff       	sbrs	r16, 7
     950:	09 c0       	rjmp	.+18     	; 0x964 <__stack+0x505>
     952:	f4 e0       	ldi	r31, 0x04	; 4
     954:	af 0e       	add	r10, r31
     956:	b1 1c       	adc	r11, r1
     958:	f2 01       	movw	r30, r4
     95a:	60 81       	ld	r22, Z
     95c:	71 81       	ldd	r23, Z+1	; 0x01
     95e:	82 81       	ldd	r24, Z+2	; 0x02
     960:	93 81       	ldd	r25, Z+3	; 0x03
     962:	08 c0       	rjmp	.+16     	; 0x974 <__stack+0x515>
     964:	f2 e0       	ldi	r31, 0x02	; 2
     966:	af 0e       	add	r10, r31
     968:	b1 1c       	adc	r11, r1
     96a:	f2 01       	movw	r30, r4
     96c:	60 81       	ld	r22, Z
     96e:	71 81       	ldd	r23, Z+1	; 0x01
     970:	80 e0       	ldi	r24, 0x00	; 0
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	a3 01       	movw	r20, r6
     976:	2d d4       	rcall	.+2138   	; 0x11d2 <__ultoa_invert>
     978:	e8 2e       	mov	r14, r24
     97a:	e6 18       	sub	r14, r6
     97c:	0f 77       	andi	r16, 0x7F	; 127
     97e:	30 2e       	mov	r3, r16
     980:	36 fe       	sbrs	r3, 6
     982:	0b c0       	rjmp	.+22     	; 0x99a <__stack+0x53b>
     984:	33 2d       	mov	r19, r3
     986:	3e 7f       	andi	r19, 0xFE	; 254
     988:	e1 16       	cp	r14, r17
     98a:	50 f4       	brcc	.+20     	; 0x9a0 <__stack+0x541>
     98c:	34 fe       	sbrs	r3, 4
     98e:	0a c0       	rjmp	.+20     	; 0x9a4 <__stack+0x545>
     990:	32 fc       	sbrc	r3, 2
     992:	08 c0       	rjmp	.+16     	; 0x9a4 <__stack+0x545>
     994:	33 2d       	mov	r19, r3
     996:	3e 7e       	andi	r19, 0xEE	; 238
     998:	05 c0       	rjmp	.+10     	; 0x9a4 <__stack+0x545>
     99a:	0e 2d       	mov	r16, r14
     99c:	33 2d       	mov	r19, r3
     99e:	03 c0       	rjmp	.+6      	; 0x9a6 <__stack+0x547>
     9a0:	0e 2d       	mov	r16, r14
     9a2:	01 c0       	rjmp	.+2      	; 0x9a6 <__stack+0x547>
     9a4:	01 2f       	mov	r16, r17
     9a6:	34 ff       	sbrs	r19, 4
     9a8:	0c c0       	rjmp	.+24     	; 0x9c2 <__stack+0x563>
     9aa:	fe 01       	movw	r30, r28
     9ac:	ee 0d       	add	r30, r14
     9ae:	f1 1d       	adc	r31, r1
     9b0:	80 81       	ld	r24, Z
     9b2:	80 33       	cpi	r24, 0x30	; 48
     9b4:	11 f4       	brne	.+4      	; 0x9ba <__stack+0x55b>
     9b6:	39 7e       	andi	r19, 0xE9	; 233
     9b8:	08 c0       	rjmp	.+16     	; 0x9ca <__stack+0x56b>
     9ba:	32 ff       	sbrs	r19, 2
     9bc:	05 c0       	rjmp	.+10     	; 0x9c8 <__stack+0x569>
     9be:	0e 5f       	subi	r16, 0xFE	; 254
     9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__stack+0x56b>
     9c2:	83 2f       	mov	r24, r19
     9c4:	86 78       	andi	r24, 0x86	; 134
     9c6:	09 f0       	breq	.+2      	; 0x9ca <__stack+0x56b>
     9c8:	0f 5f       	subi	r16, 0xFF	; 255
     9ca:	33 fd       	sbrc	r19, 3
     9cc:	12 c0       	rjmp	.+36     	; 0x9f2 <__stack+0x593>
     9ce:	30 ff       	sbrs	r19, 0
     9d0:	06 c0       	rjmp	.+12     	; 0x9de <__stack+0x57f>
     9d2:	1e 2d       	mov	r17, r14
     9d4:	0f 15       	cp	r16, r15
     9d6:	18 f4       	brcc	.+6      	; 0x9de <__stack+0x57f>
     9d8:	1f 0d       	add	r17, r15
     9da:	10 1b       	sub	r17, r16
     9dc:	0f 2d       	mov	r16, r15
     9de:	0f 15       	cp	r16, r15
     9e0:	60 f4       	brcc	.+24     	; 0x9fa <__stack+0x59b>
     9e2:	b6 01       	movw	r22, r12
     9e4:	80 e2       	ldi	r24, 0x20	; 32
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	3b 8b       	std	Y+19, r19	; 0x13
     9ea:	9b d3       	rcall	.+1846   	; 0x1122 <fputc>
     9ec:	0f 5f       	subi	r16, 0xFF	; 255
     9ee:	3b 89       	ldd	r19, Y+19	; 0x13
     9f0:	f6 cf       	rjmp	.-20     	; 0x9de <__stack+0x57f>
     9f2:	0f 15       	cp	r16, r15
     9f4:	10 f4       	brcc	.+4      	; 0x9fa <__stack+0x59b>
     9f6:	f0 1a       	sub	r15, r16
     9f8:	01 c0       	rjmp	.+2      	; 0x9fc <__stack+0x59d>
     9fa:	f1 2c       	mov	r15, r1
     9fc:	34 ff       	sbrs	r19, 4
     9fe:	11 c0       	rjmp	.+34     	; 0xa22 <__stack+0x5c3>
     a00:	b6 01       	movw	r22, r12
     a02:	80 e3       	ldi	r24, 0x30	; 48
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	3b 8b       	std	Y+19, r19	; 0x13
     a08:	8c d3       	rcall	.+1816   	; 0x1122 <fputc>
     a0a:	3b 89       	ldd	r19, Y+19	; 0x13
     a0c:	32 ff       	sbrs	r19, 2
     a0e:	16 c0       	rjmp	.+44     	; 0xa3c <__stack+0x5dd>
     a10:	31 fd       	sbrc	r19, 1
     a12:	03 c0       	rjmp	.+6      	; 0xa1a <__stack+0x5bb>
     a14:	88 e7       	ldi	r24, 0x78	; 120
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	02 c0       	rjmp	.+4      	; 0xa1e <__stack+0x5bf>
     a1a:	88 e5       	ldi	r24, 0x58	; 88
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	b6 01       	movw	r22, r12
     a20:	0c c0       	rjmp	.+24     	; 0xa3a <__stack+0x5db>
     a22:	83 2f       	mov	r24, r19
     a24:	86 78       	andi	r24, 0x86	; 134
     a26:	51 f0       	breq	.+20     	; 0xa3c <__stack+0x5dd>
     a28:	31 ff       	sbrs	r19, 1
     a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x5d1>
     a2c:	8b e2       	ldi	r24, 0x2B	; 43
     a2e:	01 c0       	rjmp	.+2      	; 0xa32 <__stack+0x5d3>
     a30:	80 e2       	ldi	r24, 0x20	; 32
     a32:	37 fd       	sbrc	r19, 7
     a34:	8d e2       	ldi	r24, 0x2D	; 45
     a36:	b6 01       	movw	r22, r12
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	73 d3       	rcall	.+1766   	; 0x1122 <fputc>
     a3c:	e1 16       	cp	r14, r17
     a3e:	30 f4       	brcc	.+12     	; 0xa4c <__stack+0x5ed>
     a40:	b6 01       	movw	r22, r12
     a42:	80 e3       	ldi	r24, 0x30	; 48
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	6d d3       	rcall	.+1754   	; 0x1122 <fputc>
     a48:	11 50       	subi	r17, 0x01	; 1
     a4a:	f8 cf       	rjmp	.-16     	; 0xa3c <__stack+0x5dd>
     a4c:	ea 94       	dec	r14
     a4e:	f3 01       	movw	r30, r6
     a50:	ee 0d       	add	r30, r14
     a52:	f1 1d       	adc	r31, r1
     a54:	80 81       	ld	r24, Z
     a56:	b6 01       	movw	r22, r12
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	63 d3       	rcall	.+1734   	; 0x1122 <fputc>
     a5c:	e1 10       	cpse	r14, r1
     a5e:	f6 cf       	rjmp	.-20     	; 0xa4c <__stack+0x5ed>
     a60:	14 c0       	rjmp	.+40     	; 0xa8a <__stack+0x62b>
     a62:	f4 e0       	ldi	r31, 0x04	; 4
     a64:	ff 15       	cp	r31, r15
     a66:	48 f5       	brcc	.+82     	; 0xaba <__stack+0x65b>
     a68:	84 e0       	ldi	r24, 0x04	; 4
     a6a:	f8 1a       	sub	r15, r24
     a6c:	33 fe       	sbrs	r3, 3
     a6e:	1d c0       	rjmp	.+58     	; 0xaaa <__stack+0x64b>
     a70:	21 10       	cpse	r2, r1
     a72:	24 c0       	rjmp	.+72     	; 0xabc <__stack+0x65d>
     a74:	03 ff       	sbrs	r16, 3
     a76:	27 c0       	rjmp	.+78     	; 0xac6 <__stack+0x667>
     a78:	06 e2       	ldi	r16, 0x26	; 38
     a7a:	10 e0       	ldi	r17, 0x00	; 0
     a7c:	f3 2d       	mov	r31, r3
     a7e:	f0 71       	andi	r31, 0x10	; 16
     a80:	3f 2e       	mov	r3, r31
     a82:	f8 01       	movw	r30, r16
     a84:	84 91       	lpm	r24, Z
     a86:	81 11       	cpse	r24, r1
     a88:	21 c0       	rjmp	.+66     	; 0xacc <__stack+0x66d>
     a8a:	ff 20       	and	r15, r15
     a8c:	09 f4       	brne	.+2      	; 0xa90 <__stack+0x631>
     a8e:	fd cc       	rjmp	.-1542   	; 0x48a <__stack+0x2b>
     a90:	b6 01       	movw	r22, r12
     a92:	80 e2       	ldi	r24, 0x20	; 32
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	45 d3       	rcall	.+1674   	; 0x1122 <fputc>
     a98:	fa 94       	dec	r15
     a9a:	f7 cf       	rjmp	.-18     	; 0xa8a <__stack+0x62b>
     a9c:	f6 01       	movw	r30, r12
     a9e:	86 81       	ldd	r24, Z+6	; 0x06
     aa0:	97 81       	ldd	r25, Z+7	; 0x07
     aa2:	23 c0       	rjmp	.+70     	; 0xaea <__stack+0x68b>
     aa4:	8f ef       	ldi	r24, 0xFF	; 255
     aa6:	9f ef       	ldi	r25, 0xFF	; 255
     aa8:	20 c0       	rjmp	.+64     	; 0xaea <__stack+0x68b>
     aaa:	b6 01       	movw	r22, r12
     aac:	80 e2       	ldi	r24, 0x20	; 32
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	38 d3       	rcall	.+1648   	; 0x1122 <fputc>
     ab2:	fa 94       	dec	r15
     ab4:	f1 10       	cpse	r15, r1
     ab6:	f9 cf       	rjmp	.-14     	; 0xaaa <__stack+0x64b>
     ab8:	db cf       	rjmp	.-74     	; 0xa70 <__stack+0x611>
     aba:	f1 2c       	mov	r15, r1
     abc:	b6 01       	movw	r22, r12
     abe:	82 2d       	mov	r24, r2
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	2f d3       	rcall	.+1630   	; 0x1122 <fputc>
     ac4:	d7 cf       	rjmp	.-82     	; 0xa74 <__stack+0x615>
     ac6:	0a e2       	ldi	r16, 0x2A	; 42
     ac8:	10 e0       	ldi	r17, 0x00	; 0
     aca:	d8 cf       	rjmp	.-80     	; 0xa7c <__stack+0x61d>
     acc:	31 10       	cpse	r3, r1
     ace:	80 52       	subi	r24, 0x20	; 32
     ad0:	b6 01       	movw	r22, r12
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	26 d3       	rcall	.+1612   	; 0x1122 <fputc>
     ad6:	0f 5f       	subi	r16, 0xFF	; 255
     ad8:	1f 4f       	sbci	r17, 0xFF	; 255
     ada:	d3 cf       	rjmp	.-90     	; 0xa82 <__stack+0x623>
     adc:	23 e0       	ldi	r18, 0x03	; 3
     ade:	2f 15       	cp	r18, r15
     ae0:	10 f4       	brcc	.+4      	; 0xae6 <__stack+0x687>
     ae2:	83 e0       	ldi	r24, 0x03	; 3
     ae4:	c2 cf       	rjmp	.-124    	; 0xa6a <__stack+0x60b>
     ae6:	f1 2c       	mov	r15, r1
     ae8:	c5 cf       	rjmp	.-118    	; 0xa74 <__stack+0x615>
     aea:	63 96       	adiw	r28, 0x13	; 19
     aec:	e2 e1       	ldi	r30, 0x12	; 18
     aee:	86 c0       	rjmp	.+268    	; 0xbfc <__epilogue_restores__>

00000af0 <main>:

int main(){

    init();
     af0:	6e db       	rcall	.-2340   	; 0x1ce <init>
            sleep_cpu();
            sleep_disable();
            lcd_clrscr();
            float result = (float)(adc + 1) * REFERENCE_VOL / 1024;
            int leds = (int) ((result / REFERENCE_VOL) * PIN_MAX);
            sprintf(buffer, "Vol: %.3f\nLED: %d\n", result, leds);
     af2:	00 e6       	ldi	r16, 0x60	; 96
     af4:	10 e0       	ldi	r17, 0x00	; 0
     af6:	c0 e8       	ldi	r28, 0x80	; 128
     af8:	d0 e0       	ldi	r29, 0x00	; 0

int main(){

    init();
        while(1){
            sleep_enable();
     afa:	85 b7       	in	r24, 0x35	; 53
     afc:	80 68       	ori	r24, 0x80	; 128
     afe:	85 bf       	out	0x35, r24	; 53
            sei();
     b00:	78 94       	sei
            sleep_cpu();
     b02:	88 95       	sleep
            sleep_disable();
     b04:	85 b7       	in	r24, 0x35	; 53
     b06:	8f 77       	andi	r24, 0x7F	; 127
     b08:	85 bf       	out	0x35, r24	; 53
            lcd_clrscr();
     b0a:	1b dc       	rcall	.-1994   	; 0x342 <lcd_clrscr>
            float result = (float)(adc + 1) * REFERENCE_VOL / 1024;
     b0c:	60 91 00 01 	lds	r22, 0x0100
     b10:	70 91 01 01 	lds	r23, 0x0101
     b14:	6f 5f       	subi	r22, 0xFF	; 255
     b16:	7f 4f       	sbci	r23, 0xFF	; 255
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	23 d1       	rcall	.+582    	; 0xd64 <__floatunsisf>
     b1e:	20 e0       	ldi	r18, 0x00	; 0
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	40 ea       	ldi	r20, 0xA0	; 160
     b24:	50 e4       	ldi	r21, 0x40	; 64
     b26:	ac d1       	rcall	.+856    	; 0xe80 <__mulsf3>
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	40 e8       	ldi	r20, 0x80	; 128
     b2e:	5a e3       	ldi	r21, 0x3A	; 58
     b30:	a7 d1       	rcall	.+846    	; 0xe80 <__mulsf3>
     b32:	e6 2e       	mov	r14, r22
     b34:	d7 2e       	mov	r13, r23
     b36:	c8 2e       	mov	r12, r24
     b38:	b9 2e       	mov	r11, r25
            int leds = (int) ((result / REFERENCE_VOL) * PIN_MAX);
     b3a:	20 e0       	ldi	r18, 0x00	; 0
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	40 ea       	ldi	r20, 0xA0	; 160
     b40:	50 e4       	ldi	r21, 0x40	; 64
     b42:	77 d0       	rcall	.+238    	; 0xc32 <__divsf3>
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	40 e7       	ldi	r20, 0x70	; 112
     b4a:	51 e4       	ldi	r21, 0x41	; 65
     b4c:	99 d1       	rcall	.+818    	; 0xe80 <__mulsf3>
     b4e:	d9 d0       	rcall	.+434    	; 0xd02 <__fixsfsi>
     b50:	f6 2e       	mov	r15, r22
            sprintf(buffer, "Vol: %.3f\nLED: %d\n", result, leds);
     b52:	7f 93       	push	r23
     b54:	6f 93       	push	r22
     b56:	bf 92       	push	r11
     b58:	cf 92       	push	r12
     b5a:	df 92       	push	r13
     b5c:	ef 92       	push	r14
     b5e:	1f 93       	push	r17
     b60:	0f 93       	push	r16
     b62:	df 93       	push	r29
     b64:	cf 93       	push	r28
     b66:	15 d3       	rcall	.+1578   	; 0x1192 <sprintf>
     b68:	e4 e7       	ldi	r30, 0x74	; 116
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	8d b7       	in	r24, 0x3d	; 61
     b6e:	9e b7       	in	r25, 0x3e	; 62
     b70:	0a 96       	adiw	r24, 0x0a	; 10
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	f8 94       	cli
     b76:	9e bf       	out	0x3e, r25	; 62
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	8d bf       	out	0x3d, r24	; 61
     b7c:	83 e2       	ldi	r24, 0x23	; 35
        _delay_ms(10);
}

void USART_Transmit(unsigned char data){
    
    while(! (UCSRA & (1<<UDRE)));
     b7e:	5d 9b       	sbis	0x0b, 5	; 11
     b80:	fe cf       	rjmp	.-4      	; 0xb7e <main+0x8e>
    UDR = data;
     b82:	8c b9       	out	0x0c, r24	; 12
}

void uputs(char *s){
    while(*s){
     b84:	81 91       	ld	r24, Z+
     b86:	81 11       	cpse	r24, r1
     b88:	fa cf       	rjmp	.-12     	; 0xb7e <main+0x8e>
     b8a:	80 91 80 00 	lds	r24, 0x0080
     b8e:	88 23       	and	r24, r24
     b90:	41 f0       	breq	.+16     	; 0xba2 <main+0xb2>
     b92:	e1 e8       	ldi	r30, 0x81	; 129
     b94:	f0 e0       	ldi	r31, 0x00	; 0
        _delay_ms(10);
}

void USART_Transmit(unsigned char data){
    
    while(! (UCSRA & (1<<UDRE)));
     b96:	5d 9b       	sbis	0x0b, 5	; 11
     b98:	fe cf       	rjmp	.-4      	; 0xb96 <main+0xa6>
    UDR = data;
     b9a:	8c b9       	out	0x0c, r24	; 12
}

void uputs(char *s){
    while(*s){
     b9c:	81 91       	ld	r24, Z+
     b9e:	81 11       	cpse	r24, r1
     ba0:	fa cf       	rjmp	.-12     	; 0xb96 <main+0xa6>
            float result = (float)(adc + 1) * REFERENCE_VOL / 1024;
            int leds = (int) ((result / REFERENCE_VOL) * PIN_MAX);
            sprintf(buffer, "Vol: %.3f\nLED: %d\n", result, leds);
            uputs("##########\n");
            uputs(buffer);
            lcd_puts(buffer);
     ba2:	80 e8       	ldi	r24, 0x80	; 128
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	e8 db       	rcall	.-2096   	; 0x378 <lcd_puts>
            PORTB = leds;
     ba8:	f8 ba       	out	0x18, r15	; 24
        }
     baa:	a7 cf       	rjmp	.-178    	; 0xafa <main+0xa>

00000bac <__umulhisi3>:
     bac:	a2 9f       	mul	r26, r18
     bae:	b0 01       	movw	r22, r0
     bb0:	b3 9f       	mul	r27, r19
     bb2:	c0 01       	movw	r24, r0
     bb4:	a3 9f       	mul	r26, r19
     bb6:	01 d0       	rcall	.+2      	; 0xbba <__umulhisi3+0xe>
     bb8:	b2 9f       	mul	r27, r18
     bba:	70 0d       	add	r23, r0
     bbc:	81 1d       	adc	r24, r1
     bbe:	11 24       	eor	r1, r1
     bc0:	91 1d       	adc	r25, r1
     bc2:	08 95       	ret

00000bc4 <__prologue_saves__>:
     bc4:	2f 92       	push	r2
     bc6:	3f 92       	push	r3
     bc8:	4f 92       	push	r4
     bca:	5f 92       	push	r5
     bcc:	6f 92       	push	r6
     bce:	7f 92       	push	r7
     bd0:	8f 92       	push	r8
     bd2:	9f 92       	push	r9
     bd4:	af 92       	push	r10
     bd6:	bf 92       	push	r11
     bd8:	cf 92       	push	r12
     bda:	df 92       	push	r13
     bdc:	ef 92       	push	r14
     bde:	ff 92       	push	r15
     be0:	0f 93       	push	r16
     be2:	1f 93       	push	r17
     be4:	cf 93       	push	r28
     be6:	df 93       	push	r29
     be8:	cd b7       	in	r28, 0x3d	; 61
     bea:	de b7       	in	r29, 0x3e	; 62
     bec:	ca 1b       	sub	r28, r26
     bee:	db 0b       	sbc	r29, r27
     bf0:	0f b6       	in	r0, 0x3f	; 63
     bf2:	f8 94       	cli
     bf4:	de bf       	out	0x3e, r29	; 62
     bf6:	0f be       	out	0x3f, r0	; 63
     bf8:	cd bf       	out	0x3d, r28	; 61
     bfa:	09 94       	ijmp

00000bfc <__epilogue_restores__>:
     bfc:	2a 88       	ldd	r2, Y+18	; 0x12
     bfe:	39 88       	ldd	r3, Y+17	; 0x11
     c00:	48 88       	ldd	r4, Y+16	; 0x10
     c02:	5f 84       	ldd	r5, Y+15	; 0x0f
     c04:	6e 84       	ldd	r6, Y+14	; 0x0e
     c06:	7d 84       	ldd	r7, Y+13	; 0x0d
     c08:	8c 84       	ldd	r8, Y+12	; 0x0c
     c0a:	9b 84       	ldd	r9, Y+11	; 0x0b
     c0c:	aa 84       	ldd	r10, Y+10	; 0x0a
     c0e:	b9 84       	ldd	r11, Y+9	; 0x09
     c10:	c8 84       	ldd	r12, Y+8	; 0x08
     c12:	df 80       	ldd	r13, Y+7	; 0x07
     c14:	ee 80       	ldd	r14, Y+6	; 0x06
     c16:	fd 80       	ldd	r15, Y+5	; 0x05
     c18:	0c 81       	ldd	r16, Y+4	; 0x04
     c1a:	1b 81       	ldd	r17, Y+3	; 0x03
     c1c:	aa 81       	ldd	r26, Y+2	; 0x02
     c1e:	b9 81       	ldd	r27, Y+1	; 0x01
     c20:	ce 0f       	add	r28, r30
     c22:	d1 1d       	adc	r29, r1
     c24:	0f b6       	in	r0, 0x3f	; 63
     c26:	f8 94       	cli
     c28:	de bf       	out	0x3e, r29	; 62
     c2a:	0f be       	out	0x3f, r0	; 63
     c2c:	cd bf       	out	0x3d, r28	; 61
     c2e:	ed 01       	movw	r28, r26
     c30:	08 95       	ret

00000c32 <__divsf3>:
     c32:	0c d0       	rcall	.+24     	; 0xc4c <__divsf3x>
     c34:	eb c0       	rjmp	.+470    	; 0xe0c <__fp_round>
     c36:	e3 d0       	rcall	.+454    	; 0xdfe <__fp_pscB>
     c38:	40 f0       	brcs	.+16     	; 0xc4a <__divsf3+0x18>
     c3a:	da d0       	rcall	.+436    	; 0xdf0 <__fp_pscA>
     c3c:	30 f0       	brcs	.+12     	; 0xc4a <__divsf3+0x18>
     c3e:	21 f4       	brne	.+8      	; 0xc48 <__divsf3+0x16>
     c40:	5f 3f       	cpi	r21, 0xFF	; 255
     c42:	19 f0       	breq	.+6      	; 0xc4a <__divsf3+0x18>
     c44:	cc c0       	rjmp	.+408    	; 0xdde <__fp_inf>
     c46:	51 11       	cpse	r21, r1
     c48:	15 c1       	rjmp	.+554    	; 0xe74 <__fp_szero>
     c4a:	cf c0       	rjmp	.+414    	; 0xdea <__fp_nan>

00000c4c <__divsf3x>:
     c4c:	f0 d0       	rcall	.+480    	; 0xe2e <__fp_split3>
     c4e:	98 f3       	brcs	.-26     	; 0xc36 <__divsf3+0x4>

00000c50 <__divsf3_pse>:
     c50:	99 23       	and	r25, r25
     c52:	c9 f3       	breq	.-14     	; 0xc46 <__divsf3+0x14>
     c54:	55 23       	and	r21, r21
     c56:	b1 f3       	breq	.-20     	; 0xc44 <__divsf3+0x12>
     c58:	95 1b       	sub	r25, r21
     c5a:	55 0b       	sbc	r21, r21
     c5c:	bb 27       	eor	r27, r27
     c5e:	aa 27       	eor	r26, r26
     c60:	62 17       	cp	r22, r18
     c62:	73 07       	cpc	r23, r19
     c64:	84 07       	cpc	r24, r20
     c66:	38 f0       	brcs	.+14     	; 0xc76 <__divsf3_pse+0x26>
     c68:	9f 5f       	subi	r25, 0xFF	; 255
     c6a:	5f 4f       	sbci	r21, 0xFF	; 255
     c6c:	22 0f       	add	r18, r18
     c6e:	33 1f       	adc	r19, r19
     c70:	44 1f       	adc	r20, r20
     c72:	aa 1f       	adc	r26, r26
     c74:	a9 f3       	breq	.-22     	; 0xc60 <__divsf3_pse+0x10>
     c76:	33 d0       	rcall	.+102    	; 0xcde <__divsf3_pse+0x8e>
     c78:	0e 2e       	mov	r0, r30
     c7a:	3a f0       	brmi	.+14     	; 0xc8a <__divsf3_pse+0x3a>
     c7c:	e0 e8       	ldi	r30, 0x80	; 128
     c7e:	30 d0       	rcall	.+96     	; 0xce0 <__divsf3_pse+0x90>
     c80:	91 50       	subi	r25, 0x01	; 1
     c82:	50 40       	sbci	r21, 0x00	; 0
     c84:	e6 95       	lsr	r30
     c86:	00 1c       	adc	r0, r0
     c88:	ca f7       	brpl	.-14     	; 0xc7c <__divsf3_pse+0x2c>
     c8a:	29 d0       	rcall	.+82     	; 0xcde <__divsf3_pse+0x8e>
     c8c:	fe 2f       	mov	r31, r30
     c8e:	27 d0       	rcall	.+78     	; 0xcde <__divsf3_pse+0x8e>
     c90:	66 0f       	add	r22, r22
     c92:	77 1f       	adc	r23, r23
     c94:	88 1f       	adc	r24, r24
     c96:	bb 1f       	adc	r27, r27
     c98:	26 17       	cp	r18, r22
     c9a:	37 07       	cpc	r19, r23
     c9c:	48 07       	cpc	r20, r24
     c9e:	ab 07       	cpc	r26, r27
     ca0:	b0 e8       	ldi	r27, 0x80	; 128
     ca2:	09 f0       	breq	.+2      	; 0xca6 <__divsf3_pse+0x56>
     ca4:	bb 0b       	sbc	r27, r27
     ca6:	80 2d       	mov	r24, r0
     ca8:	bf 01       	movw	r22, r30
     caa:	ff 27       	eor	r31, r31
     cac:	93 58       	subi	r25, 0x83	; 131
     cae:	5f 4f       	sbci	r21, 0xFF	; 255
     cb0:	2a f0       	brmi	.+10     	; 0xcbc <__divsf3_pse+0x6c>
     cb2:	9e 3f       	cpi	r25, 0xFE	; 254
     cb4:	51 05       	cpc	r21, r1
     cb6:	68 f0       	brcs	.+26     	; 0xcd2 <__divsf3_pse+0x82>
     cb8:	92 c0       	rjmp	.+292    	; 0xdde <__fp_inf>
     cba:	dc c0       	rjmp	.+440    	; 0xe74 <__fp_szero>
     cbc:	5f 3f       	cpi	r21, 0xFF	; 255
     cbe:	ec f3       	brlt	.-6      	; 0xcba <__divsf3_pse+0x6a>
     cc0:	98 3e       	cpi	r25, 0xE8	; 232
     cc2:	dc f3       	brlt	.-10     	; 0xcba <__divsf3_pse+0x6a>
     cc4:	86 95       	lsr	r24
     cc6:	77 95       	ror	r23
     cc8:	67 95       	ror	r22
     cca:	b7 95       	ror	r27
     ccc:	f7 95       	ror	r31
     cce:	9f 5f       	subi	r25, 0xFF	; 255
     cd0:	c9 f7       	brne	.-14     	; 0xcc4 <__divsf3_pse+0x74>
     cd2:	88 0f       	add	r24, r24
     cd4:	91 1d       	adc	r25, r1
     cd6:	96 95       	lsr	r25
     cd8:	87 95       	ror	r24
     cda:	97 f9       	bld	r25, 7
     cdc:	08 95       	ret
     cde:	e1 e0       	ldi	r30, 0x01	; 1
     ce0:	66 0f       	add	r22, r22
     ce2:	77 1f       	adc	r23, r23
     ce4:	88 1f       	adc	r24, r24
     ce6:	bb 1f       	adc	r27, r27
     ce8:	62 17       	cp	r22, r18
     cea:	73 07       	cpc	r23, r19
     cec:	84 07       	cpc	r24, r20
     cee:	ba 07       	cpc	r27, r26
     cf0:	20 f0       	brcs	.+8      	; 0xcfa <__divsf3_pse+0xaa>
     cf2:	62 1b       	sub	r22, r18
     cf4:	73 0b       	sbc	r23, r19
     cf6:	84 0b       	sbc	r24, r20
     cf8:	ba 0b       	sbc	r27, r26
     cfa:	ee 1f       	adc	r30, r30
     cfc:	88 f7       	brcc	.-30     	; 0xce0 <__divsf3_pse+0x90>
     cfe:	e0 95       	com	r30
     d00:	08 95       	ret

00000d02 <__fixsfsi>:
     d02:	04 d0       	rcall	.+8      	; 0xd0c <__fixunssfsi>
     d04:	68 94       	set
     d06:	b1 11       	cpse	r27, r1
     d08:	b5 c0       	rjmp	.+362    	; 0xe74 <__fp_szero>
     d0a:	08 95       	ret

00000d0c <__fixunssfsi>:
     d0c:	98 d0       	rcall	.+304    	; 0xe3e <__fp_splitA>
     d0e:	88 f0       	brcs	.+34     	; 0xd32 <__fixunssfsi+0x26>
     d10:	9f 57       	subi	r25, 0x7F	; 127
     d12:	90 f0       	brcs	.+36     	; 0xd38 <__fixunssfsi+0x2c>
     d14:	b9 2f       	mov	r27, r25
     d16:	99 27       	eor	r25, r25
     d18:	b7 51       	subi	r27, 0x17	; 23
     d1a:	a0 f0       	brcs	.+40     	; 0xd44 <__fixunssfsi+0x38>
     d1c:	d1 f0       	breq	.+52     	; 0xd52 <__fixunssfsi+0x46>
     d1e:	66 0f       	add	r22, r22
     d20:	77 1f       	adc	r23, r23
     d22:	88 1f       	adc	r24, r24
     d24:	99 1f       	adc	r25, r25
     d26:	1a f0       	brmi	.+6      	; 0xd2e <__fixunssfsi+0x22>
     d28:	ba 95       	dec	r27
     d2a:	c9 f7       	brne	.-14     	; 0xd1e <__fixunssfsi+0x12>
     d2c:	12 c0       	rjmp	.+36     	; 0xd52 <__fixunssfsi+0x46>
     d2e:	b1 30       	cpi	r27, 0x01	; 1
     d30:	81 f0       	breq	.+32     	; 0xd52 <__fixunssfsi+0x46>
     d32:	9f d0       	rcall	.+318    	; 0xe72 <__fp_zero>
     d34:	b1 e0       	ldi	r27, 0x01	; 1
     d36:	08 95       	ret
     d38:	9c c0       	rjmp	.+312    	; 0xe72 <__fp_zero>
     d3a:	67 2f       	mov	r22, r23
     d3c:	78 2f       	mov	r23, r24
     d3e:	88 27       	eor	r24, r24
     d40:	b8 5f       	subi	r27, 0xF8	; 248
     d42:	39 f0       	breq	.+14     	; 0xd52 <__fixunssfsi+0x46>
     d44:	b9 3f       	cpi	r27, 0xF9	; 249
     d46:	cc f3       	brlt	.-14     	; 0xd3a <__fixunssfsi+0x2e>
     d48:	86 95       	lsr	r24
     d4a:	77 95       	ror	r23
     d4c:	67 95       	ror	r22
     d4e:	b3 95       	inc	r27
     d50:	d9 f7       	brne	.-10     	; 0xd48 <__fixunssfsi+0x3c>
     d52:	3e f4       	brtc	.+14     	; 0xd62 <__fixunssfsi+0x56>
     d54:	90 95       	com	r25
     d56:	80 95       	com	r24
     d58:	70 95       	com	r23
     d5a:	61 95       	neg	r22
     d5c:	7f 4f       	sbci	r23, 0xFF	; 255
     d5e:	8f 4f       	sbci	r24, 0xFF	; 255
     d60:	9f 4f       	sbci	r25, 0xFF	; 255
     d62:	08 95       	ret

00000d64 <__floatunsisf>:
     d64:	e8 94       	clt
     d66:	09 c0       	rjmp	.+18     	; 0xd7a <__floatsisf+0x12>

00000d68 <__floatsisf>:
     d68:	97 fb       	bst	r25, 7
     d6a:	3e f4       	brtc	.+14     	; 0xd7a <__floatsisf+0x12>
     d6c:	90 95       	com	r25
     d6e:	80 95       	com	r24
     d70:	70 95       	com	r23
     d72:	61 95       	neg	r22
     d74:	7f 4f       	sbci	r23, 0xFF	; 255
     d76:	8f 4f       	sbci	r24, 0xFF	; 255
     d78:	9f 4f       	sbci	r25, 0xFF	; 255
     d7a:	99 23       	and	r25, r25
     d7c:	a9 f0       	breq	.+42     	; 0xda8 <__floatsisf+0x40>
     d7e:	f9 2f       	mov	r31, r25
     d80:	96 e9       	ldi	r25, 0x96	; 150
     d82:	bb 27       	eor	r27, r27
     d84:	93 95       	inc	r25
     d86:	f6 95       	lsr	r31
     d88:	87 95       	ror	r24
     d8a:	77 95       	ror	r23
     d8c:	67 95       	ror	r22
     d8e:	b7 95       	ror	r27
     d90:	f1 11       	cpse	r31, r1
     d92:	f8 cf       	rjmp	.-16     	; 0xd84 <__floatsisf+0x1c>
     d94:	fa f4       	brpl	.+62     	; 0xdd4 <__floatsisf+0x6c>
     d96:	bb 0f       	add	r27, r27
     d98:	11 f4       	brne	.+4      	; 0xd9e <__floatsisf+0x36>
     d9a:	60 ff       	sbrs	r22, 0
     d9c:	1b c0       	rjmp	.+54     	; 0xdd4 <__floatsisf+0x6c>
     d9e:	6f 5f       	subi	r22, 0xFF	; 255
     da0:	7f 4f       	sbci	r23, 0xFF	; 255
     da2:	8f 4f       	sbci	r24, 0xFF	; 255
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	16 c0       	rjmp	.+44     	; 0xdd4 <__floatsisf+0x6c>
     da8:	88 23       	and	r24, r24
     daa:	11 f0       	breq	.+4      	; 0xdb0 <__floatsisf+0x48>
     dac:	96 e9       	ldi	r25, 0x96	; 150
     dae:	11 c0       	rjmp	.+34     	; 0xdd2 <__floatsisf+0x6a>
     db0:	77 23       	and	r23, r23
     db2:	21 f0       	breq	.+8      	; 0xdbc <__floatsisf+0x54>
     db4:	9e e8       	ldi	r25, 0x8E	; 142
     db6:	87 2f       	mov	r24, r23
     db8:	76 2f       	mov	r23, r22
     dba:	05 c0       	rjmp	.+10     	; 0xdc6 <__floatsisf+0x5e>
     dbc:	66 23       	and	r22, r22
     dbe:	71 f0       	breq	.+28     	; 0xddc <__floatsisf+0x74>
     dc0:	96 e8       	ldi	r25, 0x86	; 134
     dc2:	86 2f       	mov	r24, r22
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	60 e0       	ldi	r22, 0x00	; 0
     dc8:	2a f0       	brmi	.+10     	; 0xdd4 <__floatsisf+0x6c>
     dca:	9a 95       	dec	r25
     dcc:	66 0f       	add	r22, r22
     dce:	77 1f       	adc	r23, r23
     dd0:	88 1f       	adc	r24, r24
     dd2:	da f7       	brpl	.-10     	; 0xdca <__floatsisf+0x62>
     dd4:	88 0f       	add	r24, r24
     dd6:	96 95       	lsr	r25
     dd8:	87 95       	ror	r24
     dda:	97 f9       	bld	r25, 7
     ddc:	08 95       	ret

00000dde <__fp_inf>:
     dde:	97 f9       	bld	r25, 7
     de0:	9f 67       	ori	r25, 0x7F	; 127
     de2:	80 e8       	ldi	r24, 0x80	; 128
     de4:	70 e0       	ldi	r23, 0x00	; 0
     de6:	60 e0       	ldi	r22, 0x00	; 0
     de8:	08 95       	ret

00000dea <__fp_nan>:
     dea:	9f ef       	ldi	r25, 0xFF	; 255
     dec:	80 ec       	ldi	r24, 0xC0	; 192
     dee:	08 95       	ret

00000df0 <__fp_pscA>:
     df0:	00 24       	eor	r0, r0
     df2:	0a 94       	dec	r0
     df4:	16 16       	cp	r1, r22
     df6:	17 06       	cpc	r1, r23
     df8:	18 06       	cpc	r1, r24
     dfa:	09 06       	cpc	r0, r25
     dfc:	08 95       	ret

00000dfe <__fp_pscB>:
     dfe:	00 24       	eor	r0, r0
     e00:	0a 94       	dec	r0
     e02:	12 16       	cp	r1, r18
     e04:	13 06       	cpc	r1, r19
     e06:	14 06       	cpc	r1, r20
     e08:	05 06       	cpc	r0, r21
     e0a:	08 95       	ret

00000e0c <__fp_round>:
     e0c:	09 2e       	mov	r0, r25
     e0e:	03 94       	inc	r0
     e10:	00 0c       	add	r0, r0
     e12:	11 f4       	brne	.+4      	; 0xe18 <__fp_round+0xc>
     e14:	88 23       	and	r24, r24
     e16:	52 f0       	brmi	.+20     	; 0xe2c <__fp_round+0x20>
     e18:	bb 0f       	add	r27, r27
     e1a:	40 f4       	brcc	.+16     	; 0xe2c <__fp_round+0x20>
     e1c:	bf 2b       	or	r27, r31
     e1e:	11 f4       	brne	.+4      	; 0xe24 <__fp_round+0x18>
     e20:	60 ff       	sbrs	r22, 0
     e22:	04 c0       	rjmp	.+8      	; 0xe2c <__fp_round+0x20>
     e24:	6f 5f       	subi	r22, 0xFF	; 255
     e26:	7f 4f       	sbci	r23, 0xFF	; 255
     e28:	8f 4f       	sbci	r24, 0xFF	; 255
     e2a:	9f 4f       	sbci	r25, 0xFF	; 255
     e2c:	08 95       	ret

00000e2e <__fp_split3>:
     e2e:	57 fd       	sbrc	r21, 7
     e30:	90 58       	subi	r25, 0x80	; 128
     e32:	44 0f       	add	r20, r20
     e34:	55 1f       	adc	r21, r21
     e36:	59 f0       	breq	.+22     	; 0xe4e <__fp_splitA+0x10>
     e38:	5f 3f       	cpi	r21, 0xFF	; 255
     e3a:	71 f0       	breq	.+28     	; 0xe58 <__fp_splitA+0x1a>
     e3c:	47 95       	ror	r20

00000e3e <__fp_splitA>:
     e3e:	88 0f       	add	r24, r24
     e40:	97 fb       	bst	r25, 7
     e42:	99 1f       	adc	r25, r25
     e44:	61 f0       	breq	.+24     	; 0xe5e <__fp_splitA+0x20>
     e46:	9f 3f       	cpi	r25, 0xFF	; 255
     e48:	79 f0       	breq	.+30     	; 0xe68 <__fp_splitA+0x2a>
     e4a:	87 95       	ror	r24
     e4c:	08 95       	ret
     e4e:	12 16       	cp	r1, r18
     e50:	13 06       	cpc	r1, r19
     e52:	14 06       	cpc	r1, r20
     e54:	55 1f       	adc	r21, r21
     e56:	f2 cf       	rjmp	.-28     	; 0xe3c <__fp_split3+0xe>
     e58:	46 95       	lsr	r20
     e5a:	f1 df       	rcall	.-30     	; 0xe3e <__fp_splitA>
     e5c:	08 c0       	rjmp	.+16     	; 0xe6e <__fp_splitA+0x30>
     e5e:	16 16       	cp	r1, r22
     e60:	17 06       	cpc	r1, r23
     e62:	18 06       	cpc	r1, r24
     e64:	99 1f       	adc	r25, r25
     e66:	f1 cf       	rjmp	.-30     	; 0xe4a <__fp_splitA+0xc>
     e68:	86 95       	lsr	r24
     e6a:	71 05       	cpc	r23, r1
     e6c:	61 05       	cpc	r22, r1
     e6e:	08 94       	sec
     e70:	08 95       	ret

00000e72 <__fp_zero>:
     e72:	e8 94       	clt

00000e74 <__fp_szero>:
     e74:	bb 27       	eor	r27, r27
     e76:	66 27       	eor	r22, r22
     e78:	77 27       	eor	r23, r23
     e7a:	cb 01       	movw	r24, r22
     e7c:	97 f9       	bld	r25, 7
     e7e:	08 95       	ret

00000e80 <__mulsf3>:
     e80:	0b d0       	rcall	.+22     	; 0xe98 <__mulsf3x>
     e82:	c4 cf       	rjmp	.-120    	; 0xe0c <__fp_round>
     e84:	b5 df       	rcall	.-150    	; 0xdf0 <__fp_pscA>
     e86:	28 f0       	brcs	.+10     	; 0xe92 <__mulsf3+0x12>
     e88:	ba df       	rcall	.-140    	; 0xdfe <__fp_pscB>
     e8a:	18 f0       	brcs	.+6      	; 0xe92 <__mulsf3+0x12>
     e8c:	95 23       	and	r25, r21
     e8e:	09 f0       	breq	.+2      	; 0xe92 <__mulsf3+0x12>
     e90:	a6 cf       	rjmp	.-180    	; 0xdde <__fp_inf>
     e92:	ab cf       	rjmp	.-170    	; 0xdea <__fp_nan>
     e94:	11 24       	eor	r1, r1
     e96:	ee cf       	rjmp	.-36     	; 0xe74 <__fp_szero>

00000e98 <__mulsf3x>:
     e98:	ca df       	rcall	.-108    	; 0xe2e <__fp_split3>
     e9a:	a0 f3       	brcs	.-24     	; 0xe84 <__mulsf3+0x4>

00000e9c <__mulsf3_pse>:
     e9c:	95 9f       	mul	r25, r21
     e9e:	d1 f3       	breq	.-12     	; 0xe94 <__mulsf3+0x14>
     ea0:	95 0f       	add	r25, r21
     ea2:	50 e0       	ldi	r21, 0x00	; 0
     ea4:	55 1f       	adc	r21, r21
     ea6:	62 9f       	mul	r22, r18
     ea8:	f0 01       	movw	r30, r0
     eaa:	72 9f       	mul	r23, r18
     eac:	bb 27       	eor	r27, r27
     eae:	f0 0d       	add	r31, r0
     eb0:	b1 1d       	adc	r27, r1
     eb2:	63 9f       	mul	r22, r19
     eb4:	aa 27       	eor	r26, r26
     eb6:	f0 0d       	add	r31, r0
     eb8:	b1 1d       	adc	r27, r1
     eba:	aa 1f       	adc	r26, r26
     ebc:	64 9f       	mul	r22, r20
     ebe:	66 27       	eor	r22, r22
     ec0:	b0 0d       	add	r27, r0
     ec2:	a1 1d       	adc	r26, r1
     ec4:	66 1f       	adc	r22, r22
     ec6:	82 9f       	mul	r24, r18
     ec8:	22 27       	eor	r18, r18
     eca:	b0 0d       	add	r27, r0
     ecc:	a1 1d       	adc	r26, r1
     ece:	62 1f       	adc	r22, r18
     ed0:	73 9f       	mul	r23, r19
     ed2:	b0 0d       	add	r27, r0
     ed4:	a1 1d       	adc	r26, r1
     ed6:	62 1f       	adc	r22, r18
     ed8:	83 9f       	mul	r24, r19
     eda:	a0 0d       	add	r26, r0
     edc:	61 1d       	adc	r22, r1
     ede:	22 1f       	adc	r18, r18
     ee0:	74 9f       	mul	r23, r20
     ee2:	33 27       	eor	r19, r19
     ee4:	a0 0d       	add	r26, r0
     ee6:	61 1d       	adc	r22, r1
     ee8:	23 1f       	adc	r18, r19
     eea:	84 9f       	mul	r24, r20
     eec:	60 0d       	add	r22, r0
     eee:	21 1d       	adc	r18, r1
     ef0:	82 2f       	mov	r24, r18
     ef2:	76 2f       	mov	r23, r22
     ef4:	6a 2f       	mov	r22, r26
     ef6:	11 24       	eor	r1, r1
     ef8:	9f 57       	subi	r25, 0x7F	; 127
     efa:	50 40       	sbci	r21, 0x00	; 0
     efc:	8a f0       	brmi	.+34     	; 0xf20 <__mulsf3_pse+0x84>
     efe:	e1 f0       	breq	.+56     	; 0xf38 <__mulsf3_pse+0x9c>
     f00:	88 23       	and	r24, r24
     f02:	4a f0       	brmi	.+18     	; 0xf16 <__mulsf3_pse+0x7a>
     f04:	ee 0f       	add	r30, r30
     f06:	ff 1f       	adc	r31, r31
     f08:	bb 1f       	adc	r27, r27
     f0a:	66 1f       	adc	r22, r22
     f0c:	77 1f       	adc	r23, r23
     f0e:	88 1f       	adc	r24, r24
     f10:	91 50       	subi	r25, 0x01	; 1
     f12:	50 40       	sbci	r21, 0x00	; 0
     f14:	a9 f7       	brne	.-22     	; 0xf00 <__mulsf3_pse+0x64>
     f16:	9e 3f       	cpi	r25, 0xFE	; 254
     f18:	51 05       	cpc	r21, r1
     f1a:	70 f0       	brcs	.+28     	; 0xf38 <__mulsf3_pse+0x9c>
     f1c:	60 cf       	rjmp	.-320    	; 0xdde <__fp_inf>
     f1e:	aa cf       	rjmp	.-172    	; 0xe74 <__fp_szero>
     f20:	5f 3f       	cpi	r21, 0xFF	; 255
     f22:	ec f3       	brlt	.-6      	; 0xf1e <__mulsf3_pse+0x82>
     f24:	98 3e       	cpi	r25, 0xE8	; 232
     f26:	dc f3       	brlt	.-10     	; 0xf1e <__mulsf3_pse+0x82>
     f28:	86 95       	lsr	r24
     f2a:	77 95       	ror	r23
     f2c:	67 95       	ror	r22
     f2e:	b7 95       	ror	r27
     f30:	f7 95       	ror	r31
     f32:	e7 95       	ror	r30
     f34:	9f 5f       	subi	r25, 0xFF	; 255
     f36:	c1 f7       	brne	.-16     	; 0xf28 <__mulsf3_pse+0x8c>
     f38:	fe 2b       	or	r31, r30
     f3a:	88 0f       	add	r24, r24
     f3c:	91 1d       	adc	r25, r1
     f3e:	96 95       	lsr	r25
     f40:	87 95       	ror	r24
     f42:	97 f9       	bld	r25, 7
     f44:	08 95       	ret

00000f46 <__ftoa_engine>:
     f46:	28 30       	cpi	r18, 0x08	; 8
     f48:	08 f0       	brcs	.+2      	; 0xf4c <__ftoa_engine+0x6>
     f4a:	27 e0       	ldi	r18, 0x07	; 7
     f4c:	33 27       	eor	r19, r19
     f4e:	da 01       	movw	r26, r20
     f50:	99 0f       	add	r25, r25
     f52:	31 1d       	adc	r19, r1
     f54:	87 fd       	sbrc	r24, 7
     f56:	91 60       	ori	r25, 0x01	; 1
     f58:	00 96       	adiw	r24, 0x00	; 0
     f5a:	61 05       	cpc	r22, r1
     f5c:	71 05       	cpc	r23, r1
     f5e:	39 f4       	brne	.+14     	; 0xf6e <__ftoa_engine+0x28>
     f60:	32 60       	ori	r19, 0x02	; 2
     f62:	2e 5f       	subi	r18, 0xFE	; 254
     f64:	3d 93       	st	X+, r19
     f66:	30 e3       	ldi	r19, 0x30	; 48
     f68:	2a 95       	dec	r18
     f6a:	e1 f7       	brne	.-8      	; 0xf64 <__ftoa_engine+0x1e>
     f6c:	08 95       	ret
     f6e:	9f 3f       	cpi	r25, 0xFF	; 255
     f70:	30 f0       	brcs	.+12     	; 0xf7e <__ftoa_engine+0x38>
     f72:	80 38       	cpi	r24, 0x80	; 128
     f74:	71 05       	cpc	r23, r1
     f76:	61 05       	cpc	r22, r1
     f78:	09 f0       	breq	.+2      	; 0xf7c <__ftoa_engine+0x36>
     f7a:	3c 5f       	subi	r19, 0xFC	; 252
     f7c:	3c 5f       	subi	r19, 0xFC	; 252
     f7e:	3d 93       	st	X+, r19
     f80:	91 30       	cpi	r25, 0x01	; 1
     f82:	08 f0       	brcs	.+2      	; 0xf86 <__ftoa_engine+0x40>
     f84:	80 68       	ori	r24, 0x80	; 128
     f86:	91 1d       	adc	r25, r1
     f88:	df 93       	push	r29
     f8a:	cf 93       	push	r28
     f8c:	1f 93       	push	r17
     f8e:	0f 93       	push	r16
     f90:	ff 92       	push	r15
     f92:	ef 92       	push	r14
     f94:	19 2f       	mov	r17, r25
     f96:	98 7f       	andi	r25, 0xF8	; 248
     f98:	96 95       	lsr	r25
     f9a:	e9 2f       	mov	r30, r25
     f9c:	96 95       	lsr	r25
     f9e:	96 95       	lsr	r25
     fa0:	e9 0f       	add	r30, r25
     fa2:	ff 27       	eor	r31, r31
     fa4:	e8 57       	subi	r30, 0x78	; 120
     fa6:	ff 4f       	sbci	r31, 0xFF	; 255
     fa8:	99 27       	eor	r25, r25
     faa:	33 27       	eor	r19, r19
     fac:	ee 24       	eor	r14, r14
     fae:	ff 24       	eor	r15, r15
     fb0:	a7 01       	movw	r20, r14
     fb2:	e7 01       	movw	r28, r14
     fb4:	05 90       	lpm	r0, Z+
     fb6:	08 94       	sec
     fb8:	07 94       	ror	r0
     fba:	28 f4       	brcc	.+10     	; 0xfc6 <__ftoa_engine+0x80>
     fbc:	36 0f       	add	r19, r22
     fbe:	e7 1e       	adc	r14, r23
     fc0:	f8 1e       	adc	r15, r24
     fc2:	49 1f       	adc	r20, r25
     fc4:	51 1d       	adc	r21, r1
     fc6:	66 0f       	add	r22, r22
     fc8:	77 1f       	adc	r23, r23
     fca:	88 1f       	adc	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	06 94       	lsr	r0
     fd0:	a1 f7       	brne	.-24     	; 0xfba <__ftoa_engine+0x74>
     fd2:	05 90       	lpm	r0, Z+
     fd4:	07 94       	ror	r0
     fd6:	28 f4       	brcc	.+10     	; 0xfe2 <__ftoa_engine+0x9c>
     fd8:	e7 0e       	add	r14, r23
     fda:	f8 1e       	adc	r15, r24
     fdc:	49 1f       	adc	r20, r25
     fde:	56 1f       	adc	r21, r22
     fe0:	c1 1d       	adc	r28, r1
     fe2:	77 0f       	add	r23, r23
     fe4:	88 1f       	adc	r24, r24
     fe6:	99 1f       	adc	r25, r25
     fe8:	66 1f       	adc	r22, r22
     fea:	06 94       	lsr	r0
     fec:	a1 f7       	brne	.-24     	; 0xfd6 <__ftoa_engine+0x90>
     fee:	05 90       	lpm	r0, Z+
     ff0:	07 94       	ror	r0
     ff2:	28 f4       	brcc	.+10     	; 0xffe <__ftoa_engine+0xb8>
     ff4:	f8 0e       	add	r15, r24
     ff6:	49 1f       	adc	r20, r25
     ff8:	56 1f       	adc	r21, r22
     ffa:	c7 1f       	adc	r28, r23
     ffc:	d1 1d       	adc	r29, r1
     ffe:	88 0f       	add	r24, r24
    1000:	99 1f       	adc	r25, r25
    1002:	66 1f       	adc	r22, r22
    1004:	77 1f       	adc	r23, r23
    1006:	06 94       	lsr	r0
    1008:	a1 f7       	brne	.-24     	; 0xff2 <__ftoa_engine+0xac>
    100a:	05 90       	lpm	r0, Z+
    100c:	07 94       	ror	r0
    100e:	20 f4       	brcc	.+8      	; 0x1018 <__ftoa_engine+0xd2>
    1010:	49 0f       	add	r20, r25
    1012:	56 1f       	adc	r21, r22
    1014:	c7 1f       	adc	r28, r23
    1016:	d8 1f       	adc	r29, r24
    1018:	99 0f       	add	r25, r25
    101a:	66 1f       	adc	r22, r22
    101c:	77 1f       	adc	r23, r23
    101e:	88 1f       	adc	r24, r24
    1020:	06 94       	lsr	r0
    1022:	a9 f7       	brne	.-22     	; 0x100e <__ftoa_engine+0xc8>
    1024:	84 91       	lpm	r24, Z
    1026:	10 95       	com	r17
    1028:	17 70       	andi	r17, 0x07	; 7
    102a:	41 f0       	breq	.+16     	; 0x103c <__ftoa_engine+0xf6>
    102c:	d6 95       	lsr	r29
    102e:	c7 95       	ror	r28
    1030:	57 95       	ror	r21
    1032:	47 95       	ror	r20
    1034:	f7 94       	ror	r15
    1036:	e7 94       	ror	r14
    1038:	1a 95       	dec	r17
    103a:	c1 f7       	brne	.-16     	; 0x102c <__ftoa_engine+0xe6>
    103c:	ee e2       	ldi	r30, 0x2E	; 46
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	68 94       	set
    1042:	15 90       	lpm	r1, Z+
    1044:	15 91       	lpm	r17, Z+
    1046:	35 91       	lpm	r19, Z+
    1048:	65 91       	lpm	r22, Z+
    104a:	95 91       	lpm	r25, Z+
    104c:	05 90       	lpm	r0, Z+
    104e:	7f e2       	ldi	r23, 0x2F	; 47
    1050:	73 95       	inc	r23
    1052:	e1 18       	sub	r14, r1
    1054:	f1 0a       	sbc	r15, r17
    1056:	43 0b       	sbc	r20, r19
    1058:	56 0b       	sbc	r21, r22
    105a:	c9 0b       	sbc	r28, r25
    105c:	d0 09       	sbc	r29, r0
    105e:	c0 f7       	brcc	.-16     	; 0x1050 <__ftoa_engine+0x10a>
    1060:	e1 0c       	add	r14, r1
    1062:	f1 1e       	adc	r15, r17
    1064:	43 1f       	adc	r20, r19
    1066:	56 1f       	adc	r21, r22
    1068:	c9 1f       	adc	r28, r25
    106a:	d0 1d       	adc	r29, r0
    106c:	7e f4       	brtc	.+30     	; 0x108c <__ftoa_engine+0x146>
    106e:	70 33       	cpi	r23, 0x30	; 48
    1070:	11 f4       	brne	.+4      	; 0x1076 <__ftoa_engine+0x130>
    1072:	8a 95       	dec	r24
    1074:	e6 cf       	rjmp	.-52     	; 0x1042 <__ftoa_engine+0xfc>
    1076:	e8 94       	clt
    1078:	01 50       	subi	r16, 0x01	; 1
    107a:	30 f0       	brcs	.+12     	; 0x1088 <__ftoa_engine+0x142>
    107c:	08 0f       	add	r16, r24
    107e:	0a f4       	brpl	.+2      	; 0x1082 <__ftoa_engine+0x13c>
    1080:	00 27       	eor	r16, r16
    1082:	02 17       	cp	r16, r18
    1084:	08 f4       	brcc	.+2      	; 0x1088 <__ftoa_engine+0x142>
    1086:	20 2f       	mov	r18, r16
    1088:	23 95       	inc	r18
    108a:	02 2f       	mov	r16, r18
    108c:	7a 33       	cpi	r23, 0x3A	; 58
    108e:	28 f0       	brcs	.+10     	; 0x109a <__ftoa_engine+0x154>
    1090:	79 e3       	ldi	r23, 0x39	; 57
    1092:	7d 93       	st	X+, r23
    1094:	2a 95       	dec	r18
    1096:	e9 f7       	brne	.-6      	; 0x1092 <__ftoa_engine+0x14c>
    1098:	10 c0       	rjmp	.+32     	; 0x10ba <__ftoa_engine+0x174>
    109a:	7d 93       	st	X+, r23
    109c:	2a 95       	dec	r18
    109e:	89 f6       	brne	.-94     	; 0x1042 <__ftoa_engine+0xfc>
    10a0:	06 94       	lsr	r0
    10a2:	97 95       	ror	r25
    10a4:	67 95       	ror	r22
    10a6:	37 95       	ror	r19
    10a8:	17 95       	ror	r17
    10aa:	17 94       	ror	r1
    10ac:	e1 18       	sub	r14, r1
    10ae:	f1 0a       	sbc	r15, r17
    10b0:	43 0b       	sbc	r20, r19
    10b2:	56 0b       	sbc	r21, r22
    10b4:	c9 0b       	sbc	r28, r25
    10b6:	d0 09       	sbc	r29, r0
    10b8:	98 f0       	brcs	.+38     	; 0x10e0 <__ftoa_engine+0x19a>
    10ba:	23 95       	inc	r18
    10bc:	7e 91       	ld	r23, -X
    10be:	73 95       	inc	r23
    10c0:	7a 33       	cpi	r23, 0x3A	; 58
    10c2:	08 f0       	brcs	.+2      	; 0x10c6 <__ftoa_engine+0x180>
    10c4:	70 e3       	ldi	r23, 0x30	; 48
    10c6:	7c 93       	st	X, r23
    10c8:	20 13       	cpse	r18, r16
    10ca:	b8 f7       	brcc	.-18     	; 0x10ba <__ftoa_engine+0x174>
    10cc:	7e 91       	ld	r23, -X
    10ce:	70 61       	ori	r23, 0x10	; 16
    10d0:	7d 93       	st	X+, r23
    10d2:	30 f0       	brcs	.+12     	; 0x10e0 <__ftoa_engine+0x19a>
    10d4:	83 95       	inc	r24
    10d6:	71 e3       	ldi	r23, 0x31	; 49
    10d8:	7d 93       	st	X+, r23
    10da:	70 e3       	ldi	r23, 0x30	; 48
    10dc:	2a 95       	dec	r18
    10de:	e1 f7       	brne	.-8      	; 0x10d8 <__ftoa_engine+0x192>
    10e0:	11 24       	eor	r1, r1
    10e2:	ef 90       	pop	r14
    10e4:	ff 90       	pop	r15
    10e6:	0f 91       	pop	r16
    10e8:	1f 91       	pop	r17
    10ea:	cf 91       	pop	r28
    10ec:	df 91       	pop	r29
    10ee:	99 27       	eor	r25, r25
    10f0:	87 fd       	sbrc	r24, 7
    10f2:	90 95       	com	r25
    10f4:	08 95       	ret

000010f6 <strnlen_P>:
    10f6:	fc 01       	movw	r30, r24
    10f8:	05 90       	lpm	r0, Z+
    10fa:	61 50       	subi	r22, 0x01	; 1
    10fc:	70 40       	sbci	r23, 0x00	; 0
    10fe:	01 10       	cpse	r0, r1
    1100:	d8 f7       	brcc	.-10     	; 0x10f8 <strnlen_P+0x2>
    1102:	80 95       	com	r24
    1104:	90 95       	com	r25
    1106:	8e 0f       	add	r24, r30
    1108:	9f 1f       	adc	r25, r31
    110a:	08 95       	ret

0000110c <strnlen>:
    110c:	fc 01       	movw	r30, r24
    110e:	61 50       	subi	r22, 0x01	; 1
    1110:	70 40       	sbci	r23, 0x00	; 0
    1112:	01 90       	ld	r0, Z+
    1114:	01 10       	cpse	r0, r1
    1116:	d8 f7       	brcc	.-10     	; 0x110e <strnlen+0x2>
    1118:	80 95       	com	r24
    111a:	90 95       	com	r25
    111c:	8e 0f       	add	r24, r30
    111e:	9f 1f       	adc	r25, r31
    1120:	08 95       	ret

00001122 <fputc>:
    1122:	0f 93       	push	r16
    1124:	1f 93       	push	r17
    1126:	cf 93       	push	r28
    1128:	df 93       	push	r29
    112a:	fb 01       	movw	r30, r22
    112c:	23 81       	ldd	r18, Z+3	; 0x03
    112e:	21 fd       	sbrc	r18, 1
    1130:	03 c0       	rjmp	.+6      	; 0x1138 <fputc+0x16>
    1132:	8f ef       	ldi	r24, 0xFF	; 255
    1134:	9f ef       	ldi	r25, 0xFF	; 255
    1136:	28 c0       	rjmp	.+80     	; 0x1188 <fputc+0x66>
    1138:	22 ff       	sbrs	r18, 2
    113a:	16 c0       	rjmp	.+44     	; 0x1168 <fputc+0x46>
    113c:	46 81       	ldd	r20, Z+6	; 0x06
    113e:	57 81       	ldd	r21, Z+7	; 0x07
    1140:	24 81       	ldd	r18, Z+4	; 0x04
    1142:	35 81       	ldd	r19, Z+5	; 0x05
    1144:	42 17       	cp	r20, r18
    1146:	53 07       	cpc	r21, r19
    1148:	44 f4       	brge	.+16     	; 0x115a <fputc+0x38>
    114a:	a0 81       	ld	r26, Z
    114c:	b1 81       	ldd	r27, Z+1	; 0x01
    114e:	9d 01       	movw	r18, r26
    1150:	2f 5f       	subi	r18, 0xFF	; 255
    1152:	3f 4f       	sbci	r19, 0xFF	; 255
    1154:	31 83       	std	Z+1, r19	; 0x01
    1156:	20 83       	st	Z, r18
    1158:	8c 93       	st	X, r24
    115a:	26 81       	ldd	r18, Z+6	; 0x06
    115c:	37 81       	ldd	r19, Z+7	; 0x07
    115e:	2f 5f       	subi	r18, 0xFF	; 255
    1160:	3f 4f       	sbci	r19, 0xFF	; 255
    1162:	37 83       	std	Z+7, r19	; 0x07
    1164:	26 83       	std	Z+6, r18	; 0x06
    1166:	10 c0       	rjmp	.+32     	; 0x1188 <fputc+0x66>
    1168:	eb 01       	movw	r28, r22
    116a:	09 2f       	mov	r16, r25
    116c:	18 2f       	mov	r17, r24
    116e:	00 84       	ldd	r0, Z+8	; 0x08
    1170:	f1 85       	ldd	r31, Z+9	; 0x09
    1172:	e0 2d       	mov	r30, r0
    1174:	09 95       	icall
    1176:	89 2b       	or	r24, r25
    1178:	e1 f6       	brne	.-72     	; 0x1132 <fputc+0x10>
    117a:	8e 81       	ldd	r24, Y+6	; 0x06
    117c:	9f 81       	ldd	r25, Y+7	; 0x07
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	9f 83       	std	Y+7, r25	; 0x07
    1182:	8e 83       	std	Y+6, r24	; 0x06
    1184:	81 2f       	mov	r24, r17
    1186:	90 2f       	mov	r25, r16
    1188:	df 91       	pop	r29
    118a:	cf 91       	pop	r28
    118c:	1f 91       	pop	r17
    118e:	0f 91       	pop	r16
    1190:	08 95       	ret

00001192 <sprintf>:
    1192:	ae e0       	ldi	r26, 0x0E	; 14
    1194:	b0 e0       	ldi	r27, 0x00	; 0
    1196:	ee ec       	ldi	r30, 0xCE	; 206
    1198:	f8 e0       	ldi	r31, 0x08	; 8
    119a:	22 cd       	rjmp	.-1468   	; 0xbe0 <__prologue_saves__+0x1c>
    119c:	0d 89       	ldd	r16, Y+21	; 0x15
    119e:	1e 89       	ldd	r17, Y+22	; 0x16
    11a0:	86 e0       	ldi	r24, 0x06	; 6
    11a2:	8c 83       	std	Y+4, r24	; 0x04
    11a4:	1a 83       	std	Y+2, r17	; 0x02
    11a6:	09 83       	std	Y+1, r16	; 0x01
    11a8:	8f ef       	ldi	r24, 0xFF	; 255
    11aa:	9f e7       	ldi	r25, 0x7F	; 127
    11ac:	9e 83       	std	Y+6, r25	; 0x06
    11ae:	8d 83       	std	Y+5, r24	; 0x05
    11b0:	ae 01       	movw	r20, r28
    11b2:	47 5e       	subi	r20, 0xE7	; 231
    11b4:	5f 4f       	sbci	r21, 0xFF	; 255
    11b6:	6f 89       	ldd	r22, Y+23	; 0x17
    11b8:	78 8d       	ldd	r23, Y+24	; 0x18
    11ba:	ce 01       	movw	r24, r28
    11bc:	01 96       	adiw	r24, 0x01	; 1
    11be:	3b d9       	rcall	.-3466   	; 0x436 <vfprintf>
    11c0:	2f 81       	ldd	r18, Y+7	; 0x07
    11c2:	38 85       	ldd	r19, Y+8	; 0x08
    11c4:	f8 01       	movw	r30, r16
    11c6:	e2 0f       	add	r30, r18
    11c8:	f3 1f       	adc	r31, r19
    11ca:	10 82       	st	Z, r1
    11cc:	2e 96       	adiw	r28, 0x0e	; 14
    11ce:	e4 e0       	ldi	r30, 0x04	; 4
    11d0:	23 cd       	rjmp	.-1466   	; 0xc18 <__epilogue_restores__+0x1c>

000011d2 <__ultoa_invert>:
    11d2:	fa 01       	movw	r30, r20
    11d4:	aa 27       	eor	r26, r26
    11d6:	28 30       	cpi	r18, 0x08	; 8
    11d8:	51 f1       	breq	.+84     	; 0x122e <__ultoa_invert+0x5c>
    11da:	20 31       	cpi	r18, 0x10	; 16
    11dc:	81 f1       	breq	.+96     	; 0x123e <__ultoa_invert+0x6c>
    11de:	e8 94       	clt
    11e0:	6f 93       	push	r22
    11e2:	6e 7f       	andi	r22, 0xFE	; 254
    11e4:	6e 5f       	subi	r22, 0xFE	; 254
    11e6:	7f 4f       	sbci	r23, 0xFF	; 255
    11e8:	8f 4f       	sbci	r24, 0xFF	; 255
    11ea:	9f 4f       	sbci	r25, 0xFF	; 255
    11ec:	af 4f       	sbci	r26, 0xFF	; 255
    11ee:	b1 e0       	ldi	r27, 0x01	; 1
    11f0:	3e d0       	rcall	.+124    	; 0x126e <__ultoa_invert+0x9c>
    11f2:	b4 e0       	ldi	r27, 0x04	; 4
    11f4:	3c d0       	rcall	.+120    	; 0x126e <__ultoa_invert+0x9c>
    11f6:	67 0f       	add	r22, r23
    11f8:	78 1f       	adc	r23, r24
    11fa:	89 1f       	adc	r24, r25
    11fc:	9a 1f       	adc	r25, r26
    11fe:	a1 1d       	adc	r26, r1
    1200:	68 0f       	add	r22, r24
    1202:	79 1f       	adc	r23, r25
    1204:	8a 1f       	adc	r24, r26
    1206:	91 1d       	adc	r25, r1
    1208:	a1 1d       	adc	r26, r1
    120a:	6a 0f       	add	r22, r26
    120c:	71 1d       	adc	r23, r1
    120e:	81 1d       	adc	r24, r1
    1210:	91 1d       	adc	r25, r1
    1212:	a1 1d       	adc	r26, r1
    1214:	20 d0       	rcall	.+64     	; 0x1256 <__ultoa_invert+0x84>
    1216:	09 f4       	brne	.+2      	; 0x121a <__ultoa_invert+0x48>
    1218:	68 94       	set
    121a:	3f 91       	pop	r19
    121c:	2a e0       	ldi	r18, 0x0A	; 10
    121e:	26 9f       	mul	r18, r22
    1220:	11 24       	eor	r1, r1
    1222:	30 19       	sub	r19, r0
    1224:	30 5d       	subi	r19, 0xD0	; 208
    1226:	31 93       	st	Z+, r19
    1228:	de f6       	brtc	.-74     	; 0x11e0 <__ultoa_invert+0xe>
    122a:	cf 01       	movw	r24, r30
    122c:	08 95       	ret
    122e:	46 2f       	mov	r20, r22
    1230:	47 70       	andi	r20, 0x07	; 7
    1232:	40 5d       	subi	r20, 0xD0	; 208
    1234:	41 93       	st	Z+, r20
    1236:	b3 e0       	ldi	r27, 0x03	; 3
    1238:	0f d0       	rcall	.+30     	; 0x1258 <__ultoa_invert+0x86>
    123a:	c9 f7       	brne	.-14     	; 0x122e <__ultoa_invert+0x5c>
    123c:	f6 cf       	rjmp	.-20     	; 0x122a <__ultoa_invert+0x58>
    123e:	46 2f       	mov	r20, r22
    1240:	4f 70       	andi	r20, 0x0F	; 15
    1242:	40 5d       	subi	r20, 0xD0	; 208
    1244:	4a 33       	cpi	r20, 0x3A	; 58
    1246:	18 f0       	brcs	.+6      	; 0x124e <__ultoa_invert+0x7c>
    1248:	49 5d       	subi	r20, 0xD9	; 217
    124a:	31 fd       	sbrc	r19, 1
    124c:	40 52       	subi	r20, 0x20	; 32
    124e:	41 93       	st	Z+, r20
    1250:	02 d0       	rcall	.+4      	; 0x1256 <__ultoa_invert+0x84>
    1252:	a9 f7       	brne	.-22     	; 0x123e <__ultoa_invert+0x6c>
    1254:	ea cf       	rjmp	.-44     	; 0x122a <__ultoa_invert+0x58>
    1256:	b4 e0       	ldi	r27, 0x04	; 4
    1258:	a6 95       	lsr	r26
    125a:	97 95       	ror	r25
    125c:	87 95       	ror	r24
    125e:	77 95       	ror	r23
    1260:	67 95       	ror	r22
    1262:	ba 95       	dec	r27
    1264:	c9 f7       	brne	.-14     	; 0x1258 <__ultoa_invert+0x86>
    1266:	00 97       	sbiw	r24, 0x00	; 0
    1268:	61 05       	cpc	r22, r1
    126a:	71 05       	cpc	r23, r1
    126c:	08 95       	ret
    126e:	9b 01       	movw	r18, r22
    1270:	ac 01       	movw	r20, r24
    1272:	0a 2e       	mov	r0, r26
    1274:	06 94       	lsr	r0
    1276:	57 95       	ror	r21
    1278:	47 95       	ror	r20
    127a:	37 95       	ror	r19
    127c:	27 95       	ror	r18
    127e:	ba 95       	dec	r27
    1280:	c9 f7       	brne	.-14     	; 0x1274 <__ultoa_invert+0xa2>
    1282:	62 0f       	add	r22, r18
    1284:	73 1f       	adc	r23, r19
    1286:	84 1f       	adc	r24, r20
    1288:	95 1f       	adc	r25, r21
    128a:	a0 1d       	adc	r26, r0
    128c:	08 95       	ret

0000128e <_exit>:
    128e:	f8 94       	cli

00001290 <__stop_program>:
    1290:	ff cf       	rjmp	.-2      	; 0x1290 <__stop_program>
